/******************************************************************************
NAME:  xpix_ypix

SYNOPSIS:

   xpix_ypix <meta file>
   
   Measure real ground-range pixel sizes for this image.


EXTERNAL ASSOCIATES:
    NAME:               USAGE:
    ---------------------------------------------------------------

FILE REFERENCES:
    NAME:               USAGE:
    ---------------------------------------------------------------

PROGRAM HISTORY:
    VERS:    DATE:   AUTHOR:
    -----------------------------------------------------------------
    1.0	     2/98    O. Lawlor	For demIFM. Initial development.
    1.01     7/01    R. Gens    Added logfile switch
    1.25     4/02    P. Denny   Standardized commandline parsing & usage()

HARDWARE/SOFTWARE LIMITATIONS:

ALGORITHM DESCRIPTION:

ALGORITHM REFERENCES:

BUGS:

******************************************************************************/
/****************************************************************************
*								            *
*   create_dem_grid creates a grid which can be used to extract a portion   *
*		    of a DEM to fit a given SAR image. 			    *
*   Copyright (C) 2001  ASF Advanced Product Development    	    	    *
*									    *
*   This program is free software; you can redistribute it and/or modify    *
*   it under the terms of the GNU General Public License as published by    *
*   the Free Software Foundation; either version 2 of the License, or       *
*   (at your option) any later version.					    *
*									    *
*   This program is distributed in the hope that it will be useful,	    *
*   but WITHOUT ANY WARRANTY; without even the implied warranty of    	    *
*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the   	    *
*   GNU General Public License for more details.  (See the file LICENSE     *
*   included in the asf_tools/ directory).				    *
*									    *
*   You should have received a copy of the GNU General Public License       *
*   along with this program; if not, write to the Free Software		    *
*   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.               *
*									    *
*   ASF Advanced Product Development LAB Contacts:			    *
*	APD E-mail:	apd@asf.alaska.edu 				    *
* 									    *
*	Alaska SAR Facility			APD Web Site:	            *	
*	Geophysical Institute			www.asf.alaska.edu/apd	    *
*       University of Alaska Fairbanks					    *
*	P.O. Box 757320							    *
*	Fairbanks, AK 99775-7320					    *
*									    *
****************************************************************************/

#include "asf.h"
#include "ddr.h"
#include "cproj.h"
#include "proj.h"
#include "asf_meta.h"

double getPixSize(meta_parameters *meta,int axis,int *loc,float elev,float dop) {
	GEOLOCATE_REC *g1, *g2;
	vector t1,t2,diff;
	dop*=1.0/meta->geo->azPixTime; /* multiply by PRF */
	g1=meta_make_geolocate(meta,meta_get_time(meta,loc[1],loc[0]),elev);
	t1=getLocCart(g1,meta_get_slant(meta,loc[1],loc[0]),meta_get_dop(meta,loc[1],loc[0])+dop);
	loc[axis]++;
	g2=meta_make_geolocate(meta,meta_get_time(meta,loc[1],loc[0]),elev);
	t2=getLocCart(g2,meta_get_slant(meta,loc[1],loc[0]),meta_get_dop(meta,loc[1],loc[0])+dop);
	loc[axis]--;
	vecSub(t2,t1,&diff);
	return vecMagnitude(diff);
}

int main(int argc,char *argv[])
{
	int axis;
	const char *sarName;
	meta_parameters *meta;
	struct DDR sar_ddr;
	double elev=0.0;

	sarName = argv[1];

	system("date");
	printf("Program: xpix_ypix <.meta and .ddr file>\n\n");

	c_getddr(sarName,&sar_ddr);
	meta=meta_init(sarName);
	
	printf("Along-the-ellipsoid pixel sizes (%d x %d pixel image)\n",sar_ddr.nl,sar_ddr.ns);
	for (axis=0;axis<2;axis++) {
		const char *axisNames[2]={"  range","azimuth"};
		int sar_x=(int)(sar_ddr.ns/2);
		int sar_y=(int)(sar_ddr.nl/2);
		int orig[2];
		meta_get_orig((void *)&sar_ddr,sar_y,sar_x,&orig[1],&orig[0]);
		
		printf(     "%s pixel size at scene center: %.7f meters\n",
			axisNames[axis], getPixSize(meta,axis,orig,0.0,0.0));
		
		printf("               ...at 1km elevation: %.7f meters\n",
			getPixSize(meta,axis,orig,1.0e3,0.0));
		
		printf("               ...at +1prf doppler: %.7f meters\n",
			getPixSize(meta,axis,orig,1.0e3,1.0));
		
		sar_x=0;
		meta_get_orig((void *)&sar_ddr,sar_y,sar_x,&orig[1],&orig[0]);
		printf("             ...at scene left edge: %.7f meters\n",
			getPixSize(meta,axis,orig,0.0,0.0));

		sar_x=sar_ddr.ns;
		meta_get_orig((void *)&sar_ddr,sar_y,sar_x,&orig[1],&orig[0]);
		printf("            ...at scene right edge: %.7f meters\n",
			getPixSize(meta,axis,orig,0.0,0.0));

		sar_x=0; sar_y=0;
		meta_get_orig((void *)&sar_ddr,sar_y,sar_x,&orig[1],&orig[0]);
		printf("              ...at scene top-left: %.7f meters\n",
			getPixSize(meta,axis,orig,0.0,0.0));
		
		sar_x=sar_ddr.ns; sar_y=sar_ddr.nl;
		meta_get_orig((void *)&sar_ddr,sar_y,sar_x,&orig[1],&orig[0]);
		printf("          ...at scene bottom-right: %.7f meters\n",
			getPixSize(meta,axis,orig,0.0,0.0));
	}
	return (0);
}
