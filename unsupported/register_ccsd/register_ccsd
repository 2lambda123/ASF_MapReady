#!/bin/sh
#
# NAME: register_ccsd
#
# SYNOPSIS:  register_ccsd <file 1> <file 2> <igram> 
#                     [ <grid resolution> [ <line 1> <line 2>] ]
#
#  <file 1> an ASF CCSD file (.D or .dat and .L or .ldr)
#  <file 2> an ASF CCSD file (.D or .dat and .L or .ldr)
#  <igram> the output interferogram (.amp, .phase, .ddr)
#  [ <grid resolution> ] is the grid resolution for fico(1).
#                           (the default is 20, for a 20x20 grid)
#  <line 1>  start line for image 1 (default=0)
#  <line 2>  start line for image 2 (default=0)
#
#
# DESCRIPTION:
#
#  Register_ccsd will run the Alaska SAR processor
#  on the two images, then coregister the two images
#  using resolve, fico, fit_line, and calc_deltas,
#  then re-process the second image so that it matches
#  up with (is coregistered with) the first.
#  The result will be an inteferogram.
#  After this, you can generate a DEM with tandem_ifm.
#
#  The register_ccsd scripts automates the process of sub-pixel
#  registration for ASF CCSD data.  This is an acronym for "Computer
#  Compatible Signal Data"-- this script will take this data,
#  SAR process it, sub-pixel register it, and make it into
#  an interferogram.
#
#  After running this script, you can do generate a DEM with
#  tandem_ifm(1), or use the interferogram for your own science.
#
#  The input files can be either new format ASF (.D and .L) or
#  old format ASF (.dat, .ldr, and .trl).  For very, very old format
#  CCSD data, you may need to run fix_ccsd before an acceptable
#  image can be obtained.
#
#       
# EXTERNAL ASSOCIATES:
#
#    		aisp
#    		resolve 
#    		fico
#    		fit_line
#    		coh
#    		igram
#    		register_slc
#
# FILE REFERENCES:
#    NAME:               USAGE:
#    ---------------------------------------------------------------
#
# PROGRAM HISTORY:
#    VERS:   DATE:  AUTHOR:      PURPOSE:
#    ---------------------------------------------------------------
#    1.0:            		 Initial development
#    1.1: 			 Corrected "rm avedop" to "rm avdop".
#    1.2:    1997  Orion Lawlor	 Updated for new FICO, changed temp. 
#				 filenames to start with reg/.
#	
# HARDWARE/SOFTWARE LIMITATIONS:
#
# ALGORITHM DESCRIPTION:
#
# ALGORITHM REFERENCES:
#
# BUGS
#	
#****************************************************************************
#								            *
#   register_ccsd correlate and register two non-correlated complex images. *
#   Copyright (C) 2001  ASF Advanced Product Development    	    	    *
#									    *
#   This program is free software; you can redistribute it and/or modify    *
#   it under the terms of the GNU General Public License as published by    *
#   the Free Software Foundation; either version 2 of the License, or       *
#   (at your option) any later version.					    *
#									    *
#   This program is distributed in the hope that it will be useful,	    *
#   but WITHOUT ANY WARRANTY; without even the implied warranty of    	    *
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the   	    *
#   GNU General Public License for more details.  (See the file LICENSE     *
#   included in the asf_tools/ directory).				    *
#									    *
#   You should have received a copy of the GNU General Public License       *
#   along with this program; if not, write to the Free Software		    *
#   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.               *
#									    *
#       ASF Advanced Product Development LAB Contacts:			    *
#	APD E-mail:	apd@asf.alaska.edu 				    *
# 									    *
#	Alaska SAR Facility			APD Web Site:	            *	
#	Geophysical Institute			www.asf.alaska.edu/apd	    *
#      	University of Alaska Fairbanks					    *
#	P.O. Box 757320							    *
#	Fairbanks, AK 99775-7320					    *
#								  	    *
#**************************************************************************/
#
if [ ! $# -eq 3 -a ! $# -eq 4 -a ! $# -eq 6 ]
then
	echo "Register_ccsd:"
	echo "Usage: register_ccsd <file 1> <file 2> <igram> "
	echo "                     [ <grid resolution> [ <line 1> <line 2>] ]"
	echo ""
	echo "  <file 1> an ASF CCSD file (.D or .dat and .L or .ldr)"
	echo "  <file 2> an ASF CCSD file (.D or .dat and .L or .ldr)"
	echo "  <igram> the output interferogram (.amp, .phase, .ddr)"
	echo "  [ <grid resolution> ] is the grid resolution for fico(1)."
	echo "                           (the default is 20, for a 20x20 grid)"
	echo "  <line 1>  start line for image 1 (default=0)"
	echo "  <line 2>  start line for image 2 (default=0)"
	echo ""
	echo "Register_ccsd will run the Alaska SAR processor"
	echo "on the two images, then coregister the two images"
	echo "using resolve, fico, fit_line, and calc_deltas,"
	echo "then re-process the second image so that it matches "
	echo "up with (is coregistered with) the first."
	echo "The result will be an inteferogram."
	echo "After this, you can generate a DEM with tandem_ifm."
	echo "\nVersion 1.2, ASF SAR TOOLS\n"
	exit 1
fi

#rm="echo Remove "
rm="/bin/rm -r"
gridRes=$4
dop="-d 1 -c reg/avedop"
if [ $# -eq 6 ]
then
	aisp1_shift=$5
	aisp2_shift=$6
else
	aisp1_shift=0
	aisp2_shift=0
fi

mkdir reg

echo "Calculating the average doppler term"
estavedop $1 $2 reg/avedop


###-------------------------------------------------------###
### Co-Register the top of image 1 to the top of image 2  ###
###-------------------------------------------------------###
echo "Co-registering first patch"

aisp1=`expr $aisp1_shift + 0`
aisp2=`expr $aisp2_shift + 0`

### Create the first patch from image 1 ###
	echo aisp -p 1 $dop -l $aisp1 $1 reg/a_p1
	     aisp -p 1 $dop -l $aisp1 $1 reg/a_p1
	cp $1.L reg/a_p1.L

### Create the first patch from image 2###
	echo aisp -p 1 $dop -l $aisp2 $2 reg/b_p1
	     aisp -p 1 $dop -l $aisp2 $2 reg/b_p1
	cp $2.L reg/b_p1.L

### Estimate the initial offsets from reg/a to reg/b ###
	echo resolve reg/a_p1 reg/b_p1 base.00 reg/ctrl1
	     resolve reg/a_p1 reg/b_p1 base.00 reg/ctrl1

### Perform sub-pixel correlation
	fico reg/a_p1 reg/b_p1 reg/ctrl1 reg/fico1 $gridRes

# Check to see if fico completed sucessfully.
if [ $? -eq 101 ]
then
	echo "Error: Fico could not find many offsets with"
	echo "interferometric phase in the top patch."
	echo "This means the interferogram"
	echo "is either mis-registered or just bad."
	echo "This can indicate any number of problems-- some can be fixed by"
	echo "processing the images separately, then co-registering them."
	echo "Register_ccsd will now attempt this."
	aisp $dop $aisp1 $1 $1
	aisp $dop $aisp2 $2 $2
	register_cpx $1 $2 $3 $gridRes
	exit 2
fi

	fit_line reg/fico1 reg/line1

###------------------------------------------###
### CORRELATE THE LAST PATCH FROM EACH IMAGE ###
###------------------------------------------###
echo "Co-registering last patch"

lastLineNo=20000
aisp1=`expr $aisp1_shift + $lastLineNo`
aisp2=`expr $aisp2_shift + $lastLineNo`

# Create the last patch from image 1 
	echo aisp -p 1 $dop -l $aisp1 $1 reg/a_pL
	     aisp -p 1 $dop -l $aisp1 $1 reg/a_pL
	cp $1.L reg/a_pL.L

# Create the last patch from image 2
	echo aisp -p 1 $dop -l $aisp2 $2 reg/b_pL
	     aisp -p 1 $dop -l $aisp2 $2 reg/b_pL
	cp $2.L reg/b_pL.L

# Estimate the initial offsets from reg/a to reg/b
	echo resolve reg/a_pL reg/b_pL base.00 reg/ctrlL
	     resolve reg/a_pL reg/b_pL base.00 reg/ctrlL

# Perform sub-pixel correlation
	fico reg/a_pL reg/b_pL reg/ctrlL reg/ficoL $gridRes
# Check to see if fico completed sucessfully.
if [ $? -eq 101 ]
then
	echo "Error: Fico could not find many offsets with"
	echo "interferometric phase in the bottom patch.  "
	echo "This means the interferogram"
	echo "is either mis-registered or just bad."
	echo "This can indicate any number of problems-- some can be fixed by"
	echo "processing the images separately, then co-registering them."
	echo "Register_ccsd will now attempt this."
	aisp $dop $aisp1 $1 $1
	aisp $dop $aisp2 $2 $2
	register_cpx $1 $2 $3 $gridRes
	exit 2
fi
	fit_line reg/ficoL reg/lineL

	calc_deltas reg/line1 reg/lineL $lastLineNo reg/deltas

###------------------------------------------###
### PROCESS Images, now lined up.            ###
###------------------------------------------###
echo "Processing input image 1"
aisp1=`expr $aisp1_shift + 0`
aisp2=`expr $aisp2_shift + 0`
echo aisp $dop -l $aisp1 $1 $1
     aisp $dop -l $aisp1 $1 $1

echo "Processing input image 2"
echo aisp -o reg/deltas $dop -l $aisp2 $2 $2_corr
     aisp -o reg/deltas $dop -l $aisp2 $2 $2_corr

igram $1 $2_corr $3
coh $1 $2_corr $3_coh
$rm $2_corr*

	echo XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
	echo register_cpx complete

