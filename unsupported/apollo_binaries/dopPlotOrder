#!/bin/ksh
# DopPlotOrder: finds all rev. numbers in all the order directories
# and calls dopPlot on each.  Also creates the mail header, 
# and sends a copy of the bad frame list off to the recipients
# listed below.
# This is the script to call when you want to find bad dopplers.

# Blow away old files
rm -f mail_message trend_plots > /dev/null 2>&1

# Compose E-Mail message listing bad dopplers.
echo "Subject: ASF Doppler Trending Report" > mail_message
echo "Automated RAMP Status Report:" >> mail_message
echo `date` >> mail_message

echo "Please enter a comment for the e-mail message: (return for none.)"
read comment
echo "Operator Comment: " $comment >> mail_message

echo >> mail_message
echo "Doppler Trending Report:  The following frames have bad dopplers" >> mail_message
echo "  and should be reprocessed:" >> mail_message
echo "Format: ramp/orderNumber/fileName   Beam   DopplerOffset" >> mail_message

echo "  " > trend_plots
echo "  " >> trend_plots
echo "  " >> trend_plots
echo "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" >> trend_plots
echo "Doppler Trending Plots: " >> trend_plots
echo "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX" >> trend_plots

# Find all CEOS files, awk out the revolution number, and sort uniquely
for rev in `ls */*/*.L | awk -F/ '{print substr($3,3,5)}' | sort -u`
do
	echo "Calling DopPlot on Revolution #" $rev
	dopPlot $rev | tee -a trend_plots
done

# Extract a list of bad files, and ask the user if they want to re-order them.
grep '/R' mail_message > bad_list
reorder.ksh bad_list

# Send mail message to Martha Mason, Katy Noltimer, 
#   Marc Forbes, Dick Harding, and the software author Orion Lawlor.
cat mail_message trend_plots | mail mmason@gi.alaska.edu \
	kfn@iceberg.mps.ohio-state.edu \
	olawlor@images.alaska.edu	\
	tlogan@images.alaska.edu	\
	dharding@images.alaska.edu	\
	dcorbett@images.alaska.edu	\
	rguritz@images.alaska.edu	\
	marc@santa.asf.alaska.edu \
	vwolf@juneau.gi.alaska.edu

# Inform user of completion.
echo "Finished doppler trending for entire order directory."
echo "The following e-mail message has been sent:"
cat mail_message
echo "Now printing a copy of this message."
lp -c mail_message

mv mail_message old/$$.mail_message
mv trend_plots old/$$.trend_plots
