#!/bin/sh
CVT_FROM_DIRECTORY=/export/project1/proj3/asf_tools/src/dopPlot
CVT_VOB_DIRECTORY="."
CVT_TEMP_DIRECTORY="/tmp"
SEND_COMMAND=echo
MK_VER_FILE=${CVT_TEMP_DIRECTORY}/cvt_making_ver$$
SHELL=/bin/sh
unset ATRIA_FORCE_GUI # explicitly turns of GUI prompting
IDENTICAL=FALSE
export SHELL ATRIA_FORCE_GUI CVT_TEMP_DIRECTORY CVT_VOB_DIRECTORY CVT_FROM_DIRECTORY SEND_COMMAND MK_VER_FILE IDENTICAL


ATRIAHOME=${ATRIAHOME:-/usr/atria}
. $ATRIAHOME/etc/cvt/cvt_rc # include standard setup

echo;echo  Converting files from $CVT_FROM_DIRECTORY to $CVT_VOB_DIRECTORY


# check to see if vob is locked
output=`cleartool lslock -vob .`

if [ -n "$output" ] ; then

  echo $output

  echo You must unlock the VOB to allow conversion.
  exit 1

fi

# check VOB owner -for setevent
if cleartool unlock -vob . 2>&1|grep permission >/dev/null; then
 echo "You must be the VOB owner to use the converters (with setevent enabled)"
 exit 1
fi

# check for default config spec

if [ -z "$CVT_USING_CSPEC" ] ; then
  cleartool catcs > $CVT_TEMP_DIRECTORY/cs.$$
  if diff $CVT_TEMP_DIRECTORY/cs.$$ $ATRIAHOME/default_config_spec; then
    echo You are using the default config_spec
  else
    echo You must set your config_spec to be default before you can run the
    echo generated converter shell scripts.
    rm -f $CVT_TEMP_DIRECTORY/cs.$$
    exit 1
  fi
else
  echo Converter will be using your config spec
fi
rm -f $CVT_TEMP_DIRECTORY/cs.$$
###############################################
# Master conversion script                    #
#                                             #
#   This script was generated by a ClearCase  #
#  clearcvt_<cvtype> program.  It is intended #
#  to be the master script run by the user.   #
#  It checks and creates branch, label, and   #
#  attribute types, creates and checks out    #
#  all directories needed, calls all the      #
#  element sub scripts (in this directory),   #
#  and finally checks in all the sub          #
#  directories again.                         #
#                                             #
###############################################

if [ -n "$CVT_DEBUG" ] ; then set -x;fi

abort() {
#cleanup temp files

echo aborting... 1>&2 

rm -f $CVT_TEMP_DIRECTORY/ccaseimp`cat $CVT_TEMP_DIRECTORY/cvtpid$$ 2>/dev/null`*

rm -f $CVT_TEMP_DIRECTORY/cvtpid$$

exit 1
}

trap 'abort' 1 2 3 15

cvtlinktst() {
if [ "$1" = "not" ] ; then ret=1;nret=0;shift
else ret=0;nret=1;shift;fi

lfile=$1
if [ ! -r "$lfile" ] ; then return $nret;fi
case `ls -l $lfile` in
  l*) return $ret;;
  *) return $nret;;
esac
}
(

:
)|cleartool -e

ret=$?
if [ "$ret" != 0 ]
then
	 abort
fi

if [ ! -d $CVT_VOB_DIRECTORY/'.'@@ ] ; then # dir existence check
  if [ -d $CVT_VOB_DIRECTORY/'.' ] ;  then 
    echo unix directory "$CVT_VOB_DIRECTORY/'.'" in vob blocks conversion 1>&2 
    exit 1
  fi
  cleartool mkdir -nco -nc $CVT_VOB_DIRECTORY/'.' 1>&2
fi
cleartool checkout -nwarn -nc $CVT_VOB_DIRECTORY/'.' 1>&2


place=`dirname $0`

for elem_script_file in `(cd $place &&ls |grep "^elem.")`
 do

    /bin/sh $place/$elem_script_file $$|cleartool -e


    if [ -n "$CVT_ABORT_CMD" -a "$?" != 0 ] ; then $CVT_ABORT_CMD $?; fi

    rm -f $CVT_TEMP_DIRECTORY/ccaseimp`cat $CVT_TEMP_DIRECTORY/cvtpid$$ 2>/dev/null`*

    rm -f $CVT_TEMP_DIRECTORY/cvtpid$$


done
unset place

if [ -r $CVT_VOB_DIRECTORY/'.'@@ ]; then #checkin test
  if cleartool diff -pred -options -status_only $CVT_VOB_DIRECTORY/'.'; then # diff test
    cleartool uncheckout $CVT_VOB_DIRECTORY/'.'
  else
    cleartool checkin -nwarn -nc -rm $CVT_VOB_DIRECTORY/'.' 2>/dev/null
  fi # diff test
fi # checkin test

