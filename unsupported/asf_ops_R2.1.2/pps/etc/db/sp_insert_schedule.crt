/*************************************************************************
 * Copyright(c) 1996, California Institute of Technology.                *
 *             ALL RIGHTS RESERVED.                                      *
 * U.S. Government Sponsorship acknowledged.                             *
 *************************************************************************/

/*=======================
	@(#)sp_insert_schedule.crt	1.3  12/16/96
=========================*/

if exists (select * from sysobjects where name = "sp_insert_schedule")
	drop proc sp_insert_schedule
go

create proc sp_insert_schedule ( 
	@job_id           int,
	@job_type         JobTypeType , 
        @job_comment      varchar(255),
	@quicklook_flag   LogicalType,
	@priority         PriorityType,
	@insert_top_flag  LogicalType
	) 
as
	declare @max_sequence   int

        /* get highest sequence number (based on the quicklook_flag)
		currently in schedule */
        select @max_sequence = max(job_sequence) from schedule holdlock
		where quicklook_flag = @quicklook_flag
 
        /* really no errors here, just handle empty schedule */
        if (@max_sequence is null)
        begin
                select @max_sequence = 0
        end
 
        /* increment @max_sequence */
        select @max_sequence = @max_sequence + 1


	/* insert into schedule table */
	insert schedule
		(job_sequence,job_id,job_type,job_comment,
		quicklook_flag,priority,insert_top_flag)
		values
		(@max_sequence,@job_id,@job_type,@job_comment,
		@quicklook_flag,@priority,@insert_top_flag)

        if (@@transtate > 1)
	begin
		return -100
	end
	else
	begin
		return 0
	end
go
