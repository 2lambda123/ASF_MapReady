/*************************************************************************
 * Copyright(c) 1996, California Institute of Technology.                *
 *             ALL RIGHTS RESERVED.                                      *
 * U.S. Government Sponsorship acknowledged.                             *
 *************************************************************************/

/*=======================
	@(#)sp_resequence_schedule.crt	1.2  11/27/96
=========================*/

if exists (select * from sysobjects where name = "sp_resequence_schedule")
        drop proc sp_resequence_schedule
go
 
create proc sp_resequence_schedule
as

        declare @job_sequence int,
                @job_id int,
                @job_type JobTypeType,
                @job_comment varchar(255),
                @priority PriorityType,
                @quicklook_flag LogicalType,
                @insert_top_flag LogicalType,
                @new_sequence int

	declare sched_cursor cursor for
	select * from schedule
	order by quicklook_flag desc, job_sequence 
	for read only

	print "sp_requence_schedule ..."

	select @new_sequence = 1

	open sched_cursor

	fetch sched_cursor
		into  @job_sequence, @job_id, @job_type,
              @job_comment, @priority, @quicklook_flag, @insert_top_flag

	while (@@sqlstatus = 0)
	begin

		insert schedule_resequence values 
		(@new_sequence, @job_id, @job_type,
                 @job_comment, @priority, @quicklook_flag, @insert_top_flag)

		if @@error != 0
			goto ERROR_HANDLER

		select @new_sequence = @new_sequence + 1
	
		fetch sched_cursor
	           into  @job_sequence, @job_id, @job_type,
                     @job_comment, @priority, @quicklook_flag, @insert_top_flag

	end

	if (@@sqlstatus = 1)
		goto ERROR_HANDLER

	close sched_cursor
	deallocate cursor sched_cursor
	return 0

ERROR_HANDLER:
	close sched_cursor
        deallocate cursor sched_cursor
        return 1


go
