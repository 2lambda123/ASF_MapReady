/* Generated by IDL compiler version OSF DCE T1.1.0-03 */
#ifndef messages_v1_0_included
#define messages_v1_0_included

#ifndef __STDC__
#define volatile
#endif

#ifndef IDLBASE_H
#include <dce/idlbase.h>
#endif
#include <dce/rpc.h>

#ifdef __cplusplus
    extern "C" {
#endif

#ifndef nbase_v0_0_included
#include <dce/nbase.h>
#endif
#define c_msg_size (5000)
extern idl_short_int send_IMS_CancelReq_to_PPS(
#ifdef IDL_PROTOTYPES
    /* [in] */ idl_char buffer[5000],
    /* [in] */ idl_long_int size,
    /* [in, out] */ error_status_t *status
#endif
);
extern idl_short_int send_IMS_ScanReq_to_PPS(
#ifdef IDL_PROTOTYPES
    /* [in] */ idl_char buffer[5000],
    /* [in] */ idl_long_int size,
    /* [in, out] */ error_status_t *status
#endif
);
extern idl_short_int send_IMS_L1PReq_to_PPS(
#ifdef IDL_PROTOTYPES
    /* [in] */ idl_char buffer[5000],
    /* [in] */ idl_long_int size,
    /* [in, out] */ error_status_t *status
#endif
);
extern idl_short_int send_IMS_SvAvail_to_PPS(
#ifdef IDL_PROTOTYPES
    /* [in] */ idl_char buffer[5000],
    /* [in] */ idl_long_int size,
    /* [in, out] */ error_status_t *status
#endif
);
extern idl_short_int send_status_to_PPS(
#ifdef IDL_PROTOTYPES
    /* [in] */ idl_char buffer[5000],
    /* [in] */ idl_long_int size,
    /* [in, out] */ error_status_t *status
#endif
);
extern idl_short_int recv_job_from_PPS(
#ifdef IDL_PROTOTYPES
    /* [in] */ idl_char buffer[5000],
    /* [in] */ idl_long_int request_size,
    /* [out] */ idl_char job_spec[5000],
    /* [in, out] */ idl_long_int *spec_size,
    /* [in, out] */ error_status_t *status
#endif
);
extern idl_short_int pps_rpc_kill(
#ifdef IDL_PROTOTYPES
    /* [in, out] */ error_status_t *status
#endif
);
extern void pps_rpc_exit(
#ifdef IDL_PROTOTYPES
    /* [in, out] */ error_status_t *status
#endif
);
typedef struct messages_v1_0_epv_t {
idl_short_int (*send_IMS_CancelReq_to_PPS)(
#ifdef IDL_PROTOTYPES
    /* [in] */ idl_char buffer[5000],
    /* [in] */ idl_long_int size,
    /* [in, out] */ error_status_t *status
#endif
);
idl_short_int (*send_IMS_ScanReq_to_PPS)(
#ifdef IDL_PROTOTYPES
    /* [in] */ idl_char buffer[5000],
    /* [in] */ idl_long_int size,
    /* [in, out] */ error_status_t *status
#endif
);
idl_short_int (*send_IMS_L1PReq_to_PPS)(
#ifdef IDL_PROTOTYPES
    /* [in] */ idl_char buffer[5000],
    /* [in] */ idl_long_int size,
    /* [in, out] */ error_status_t *status
#endif
);
idl_short_int (*send_IMS_SvAvail_to_PPS)(
#ifdef IDL_PROTOTYPES
    /* [in] */ idl_char buffer[5000],
    /* [in] */ idl_long_int size,
    /* [in, out] */ error_status_t *status
#endif
);
idl_short_int (*send_status_to_PPS)(
#ifdef IDL_PROTOTYPES
    /* [in] */ idl_char buffer[5000],
    /* [in] */ idl_long_int size,
    /* [in, out] */ error_status_t *status
#endif
);
idl_short_int (*recv_job_from_PPS)(
#ifdef IDL_PROTOTYPES
    /* [in] */ idl_char buffer[5000],
    /* [in] */ idl_long_int request_size,
    /* [out] */ idl_char job_spec[5000],
    /* [in, out] */ idl_long_int *spec_size,
    /* [in, out] */ error_status_t *status
#endif
);
idl_short_int (*pps_rpc_kill)(
#ifdef IDL_PROTOTYPES
    /* [in, out] */ error_status_t *status
#endif
);
void (*pps_rpc_exit)(
#ifdef IDL_PROTOTYPES
    /* [in, out] */ error_status_t *status
#endif
);
} messages_v1_0_epv_t;
extern rpc_if_handle_t messages_v1_0_c_ifspec;
extern rpc_if_handle_t messages_v1_0_s_ifspec;

#ifdef __cplusplus
    }
#endif

#endif
