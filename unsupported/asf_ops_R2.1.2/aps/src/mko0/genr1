#!/bin/ksh
### Generate the input data file from data supplied by Larry Stevens
### using the APS nominal coverage tool ...


PART1=0;     ## PART1 - extract non 1S line from Larrys Data
PART2=0;     ## PART2 - convert 1S files to input for mko0 (nom_cov_fmt.pl)
PART3=1;     ## PART3 - run mko0
if  [[ $PART1 != 0 ]] ; then
{
echo "Removing non 1s entries from EH Beams";
for i in R1_A_SH* ; do 
   ofn="R1A.E"${i#*R1_A_S};
   grep '.500 ' $i > $ofn
done
for i in R1_B_SH* ; do 
   ofn="R1B.E"${i#*R1_B_S};
   grep '.144 ' $i > $ofn
done
for i in R1_C_SH* ; do 
   ofn="R1C.E"${i#*R1_C_S};
   grep '.039 ' $i > $ofn
done
echo "Removing non 1s entries from FN Beams";
for i in R1_A_SF* ; do 
   ofn="R1A.FN"${i#*R1_A_SF};
   grep '.500 ' $i > ${ofn};
done
for i in R1_B_SF* ; do 
   ofn="R1B.FN"${i#*R1_B_SF};
   grep '.144 ' $i > ${ofn};
done
for i in R1_C_SF* ; do 
   ofn="R1C.FN"${i#*R1_C_SF};
   grep '.039 ' $i > ${ofn};
done
echo "Removing non 1s entries from ST Beams";
for i in R1_A_ST* ; do 
   ofn="R1A.ST"${i#*R1_A_ST};
   grep '.500 ' $i > ${ofn};
done
for i in R1_B_ST* ; do 
   ofn="R1B.ST"${i#*R1_B_ST};
   grep '.144 ' $i > ${ofn};
done
for i in R1_C_ST* ; do 
   ofn="R1C.ST"${i#*R1_C_ST};
   grep '.039 ' $i > ${ofn};
done
echo "Removing non 1s entries from WD Beams";
grep '.500 ' R1_A_SW1.COV > R1A.WD1.COV;
grep '.500 ' R1_A_SW2.COV > R1A.WD2.COV;
grep '.500 ' R1_A_SW3.COV > R1A.WD3.COV;
grep '.144 ' R1_B_SW1.COV > R1B.WD1.COV;
grep '.144 ' R1_B_SW2.COV > R1B.WD2.COV;
grep '.144 ' R1_B_SW3.COV > R1B.WD3.COV;
grep '.039 ' R1_C_SW1.COV > R1C.WD1.COV;
grep '.039 ' R1_C_SW2.COV > R1C.WD2.COV;
grep '.039 ' R1_C_SW3.COV > R1C.WD3.COV;
echo "Removing non 1s entries from SL ELeams";
grep '.500 ' R1_A_SL1.COV > R1A.EL1.COV;
grep '.144 ' R1_B_SL1.COV > R1B.EL1.COV;
grep '.039 ' R1_C_SL1.COV > R1C.EL1.COV;
echo "Removing non 1s entries from ScanSAR Beams";
grep '.500 ' R1_A_SNA.COV > R1A.SNA.COV;
grep '.500 ' R1_A_SNB.COV > R1A.SNB.COV;
grep '.500 ' R1_A_SWA.COV > R1A.SWA.COV;
grep '.500 ' R1_A_SWB.COV > R1A.SWB.COV;

grep '.144 ' R1_B_SNA.COV > R1B.SNA.COV;
grep '.144 ' R1_B_SNB.COV > R1B.SNB.COV;
grep '.144 ' R1_B_SWA.COV > R1B.SWA.COV;
grep '.144 ' R1_B_SWB.COV > R1B.SWB.COV;

grep '.039 ' R1_C_SNA.COV > R1C.SNA.COV;
grep '.039 ' R1_C_SNB.COV > R1C.SNB.COV;
grep '.039 ' R1_C_SWA.COV > R1C.SWA.COV;
grep '.039 ' R1_C_SWB.COV > R1C.SWB.COV;
}
fi

if  [[ $PART2 != 0 ]] ; then
{
echo "Processing All 1S Coverage Files to get mko0 input files...\n";
for i in *.COV ; do 
./nom_cov_fmt.pl $i >  ${i%.COV};
done
}
fi

if  [[ $PART3 != 0 ]] ; then
{
echo "Generating Orbit 0 files for phase A"
for i in R1A.??? ; do 
  sed -n -e'10p' frm.hdr | sed -e"s;STD;${i#*R1A.};" > R1${i#*R1A.}FRM.TXT
#   mkhdr.pl $i.COV > R1${i#*R1A.}FRM.TXT
   ./mko0 $i >> R1${i#*R1A.}FRM.TXT   
done

echo "Generating Orbit 0 files for phase B"
for i in R1B.??? ; do 
   sed -n -e'11p' frm.hdr | sed -e"s;STD;${i#*R1B.};" >> R1${i#*R1B.}FRM.TXT
#   mkhdr.pl $i.COV >> R1${i#*R1B.}FRM.TXT
   ./mko0 $i >> R1${i#*R1B.}FRM.TXT   
done

echo "Generating Orbit 0 files for phase C"
for i in R1C.??? ; do 
   sed -n -e'12p' frm.hdr | sed -e"s;STD;${i#*R1C.};" >> R1${i#*R1C.}FRM.TXT
#  mkhdr.pl $i.COV >> R1${i#*R1C.}FRM.TXT
   ./mko0 $i >> R1${i#*R1C.}FRM.TXT   
done
}
fi
