C--  Copyright (c)1996, California Institute of Technology.
C--  U.S. Government Sponsorship acknowledged.

*************************************************************************
*  Name:	SWENTC
*  Module Type: SUBROUTINE	Language: FORTRAN
*  Purpose:	GIVEN A CIRCLE SITE AND SWATH POINTS AT TIMES 1 AND 2, COMPUTE 
*		THE FRACTIONAL DISTANCE FROM 1 TO 2 THE SWATH MUST TRAVEL TO 
*		START COVERING THE CIRCLE.  
*  Subroutines called:
*  GCBOMB, GCDIST, GCENTC, GCPERP
*  MUST LINK VECTOR LIBRARY, DOUBLE PRECISION:  DOT
*  Input Parameters:
*  Name         Type    Definition
*  C(3)		REAL*8	XYZ OF CENTER OF CIRCLE
*  R		REAL*8	RADIUS OF THE CIRCLE (RADIANS ON THE UNIT SPHERE)
*  SL1(3)	REAL*8	AT TIME 1, THE LEFT POINT OF THE SWATH.
*  SR1(3)	REAL*8	AT TIME 1, THE RIGHT POINT OF THE SWATH.
*  SL2(3)	REAL*8	AT TIME 2, THE LEFT POINT OF THE SWATH.
*  SR2(3)	REAL*8	AT TIME 2, THE RIGHT POINT OF THE SWATH.
*  Output Parameters:
*  Name         Type    Definition
*  F		REAL*8	THE FRACTIONAL DISTANCE FROM 1 TO 2 THAT THE SWATH 
*			MUST TRAVEL TO START COVERING THE CIRCLE.
*			0.0 <= F <= 1.0
*			IF THE CIRCLE DOESN'T OVERLAP THE SWATH RECTANGLE, 
*			A VALUE OF -1.0D00 IS RETURNED.  
*  Variables:
*  Locals :
*  Externals :
*  Modification History:                                            
*  Date			Revision	Author
*  $Date$ $Revision$ $Author$
*                                                                   
*********************************************************************/
      SUBROUTINE SWENTC (C,R,SL1,SR1,SL2,SR2,F)
      character*100 SccsFileID
     -/'@(#)swentc.for	5.1 98/01/08 APS/ASF\0'/

      IMPLICIT NONE
      REAL*8 C(3), R, SL1(3), SR1(3), SL2(3), SR2(3), F
      REAL*8 P1(3), P2(3), SL(3), SLF(3), SRF(3), X(3)
      REAL*8 PI8, D, DSLC, DL, DR, DIF, DSFC
      REAL*8 ANG1C, ANG1T, ANGCT, ANG12, DL12, DR12, DXL, DXR, WL, WR
C---	VECTOR LIB FUNCTION DOT:
      REAL*8 DOT
      INTEGER IFLAG, ICOUNT
      INCLUDE 'APS_HOME:include/local/mps_const_math.inc'
C---	PI IN REAL*8 REPRESENTATION:
      PI8 = PI
      IF(R.GE.PI8/2.0D00) CALL GCBOMB
      IF(R.LT.0.0D00) CALL GCBOMB
C---	FIRST CASE:  SEE IF THE LINE SL1 SR1 IS INSIDE THE CIRCLE.  
      CALL GCSEGP(D,X,SL1,SR1,C)
C---	D IS THE DISTANCE OF THE CLOSEST POINT ON SL1 SR1 TO C.  
C---	IF C IS BEHIND US, D WILL BE NEGATIVE.  
C---	IF THE CIRCLE IS BEHIND AND FAR AWAY, NO COVERAGE.  
C---	NEED AT LEAST SOME COVERAGE FOR A CIRCLE THAT IS BEHIND US.  
      F = -1.0D0
      IF(D .LE. -R + 1.0D-9) GO TO 9999
      F = 0.00D00
C---	NOW SEE IF COVERAGE STARTS NOW.  IF SO RETURN F = 0
      IF(ABS(D) .LT. R - 1.0D-9) GO TO 9999
      DIF = D - R
      IF(DIF .GT. 1.0D-9 ) GO TO 1000
C---	D MUST BE .EQ. R.  OR ALMOST.  
C---	THE LINE DOES NOT INTERSECT THE CIRCLE BUT JUST TOUCHES IT.  AND
C---	THE CENTER OF THE CIRCLE LIES TO THE SIDE OF OR AHEAD OF THE SWATH.  
C---	REJECT COVERAGE IF ONLY THE ENDPOINTS CONTACT THE CIRCLE.  
      CALL GCDIST(DL,SL1,C)
      CALL GCDIST(DR,SR1,C)
C---	IF THE ENDPOINTS ARE FARTHER THAN R, THEN START COVERAGE AT 0.0.
C---	BECAUSE THE CIRCLE LIES AHEAD AND COVERAGE IS NEEDED.  
      IF(DL .GT. R +1.0D-9 .AND. DR .GT. R +1.0D-9) GO TO 9999
C---	THE LINE TOUCHES THE CIRCLE AT AN ENDPOINT.  
C---	NO COVERAGE HERE.  COVERAGE LIKE 
C---	THIS IS HANDLED BY THE ROUTINES WORKING WITH THE LEFT AND RIGHT 
C---	SWATH BORDERS.  
 1000 CONTINUE
      F = -1.0D0
C---	GET P1, NORMAL TO THE SL1 SR1 PLANE POINTING IN THE FORWARD
C---	DIRECTION. 
      CALL UCROSS(P1,SL1,SR1)
C---	NOW C IS FORWARD OF OUR START LINE AS ESTABLISHED ABOVE.
C
C---	IF C IS TO THE LEFT OF OR ON THE PLANE DEFINED BY THE LEFT BOUNDARY OF 
C---	THE SWATH, THEN COVERAGE, IF IT EXISTS, MUST BEGIN AT THE INTERSECTION 
C---	OF THAT BOUNDARY WITH THE CIRCLE.  (THIS IS JUST AN APPROXIMATION)
      CALL UCROSS(X,SL1,SL2)
      DL = DOT(X,C,3)
      IF(DL.LT.0.0D00) GO TO 2000
C---	GET INTERSECTION OF LEFT BOUNDARY WITH CIRCLE.
      CALL GCENTC(IFLAG,X,SL1,SL2,C,R)
      IF(IFLAG.LE.0) GO TO 9999
C---	INTERSECTION FOUND ON LEFT BOUNDARY.  
C---	COMPUTE FRACTIONAL DISTANCE SL1 TO X DIVIDED BY SL1 TO SL2.
      CALL GCFRAC(F,SL1,X,SL2)
      IF(F.GE.0.0D00 .AND. F.LE.1.0D0) GO TO 9000
C---	THERE WAS NO COVERAGE.
      F = -1.0
      GO TO 9999
 2000 CONTINUE
C---	IF C IS TO THE RIGHT OF OR ON THE PLANE DEFINED BY THE RIGHT BOUNDARY 
C---	OF THE SWATH, THEN COVERAGE, IF IT EXISTS, MUST BEGIN AT THE 
C---	INTERSECTION OF THAT BOUNDARY WITH THE CIRCLE.   (THIS IS JUST AN 
C---	APPROXIMATION)
      CALL UCROSS(X,SR2,SR1)
      DR = DOT(X,C,3)
      IF(DR.LT.0.0D00) GO TO 3000
C---	GET INTERSECTION OF RIGHT BOUNDARY WITH CIRCLE.
      CALL GCENTC(IFLAG,X,SR1,SR2,C,R)
      IF(IFLAG.LE.0) GO TO 9999
C---	INTERSECTION FOUND ON RIGHT BOUNDARY.  
C---	COMPUTE FRACTIONAL DISTANCE SL1 TO X DIVIDED BY SR1 TO SR2.
      CALL GCFRAC(F,SR1,X,SR2)
      IF(F.GE.0.0D00 .AND. F.LE.1.0D0) GO TO 9000
C---	THERE WAS NO COVERAGE.
      F = -1.0
      GO TO 9999
 3000 CONTINUE
C---	THE CIRCLE CENTER IS TO THE RIGHT OF THE LEFT BOUNDARY PLANE, AND TO 
C---	THE LEFT OF THE RIGHT BOUNDARY PLANE.  
C---	CONSIDER POINT XLR, THE INTERSECTION OF THE LEFT AND RIGHT BOUNDARIES 
C---	WHEN EXTENDED AHEAD OF US.  
C---	WE CAN SAY THAT THE CENTER OF THE CIRCLE IS WITHIN A SPERICAL TRIANGLE
C---	SL1, XLR, SR1.  ALSO THE LINE SL1, SR1 DOES NOT GO INSIDE THE CIRCLE.  
C
C---	CONSIDER A FRACTION F BETWEEN 0 AND 1 SUCH THAT IF WE TRAVEL A 
C---	FRACTION F OF THE DISTANCE FROM SL1 TO SL2 WE ARRIVE AT SLF.  USE 
C---	THE SAME FRACTION IN MOVING FROM SR1 TO SR2 AND ARRIVE AT SRF.
C---	WE ARE LOOKING FOR THE RIGHT F SUCH THAT THE GREAT CIRCLE SEGMENT 
C---	SLF, SRF IS TANGENT TO THE CIRCLE AND THE CIRCLE LIES BEYOND SLF, SRF.
C
C---	WE WILL DO THIS BY MAKING AN EXCELLENT GUESS AND THEN MAKING BETTER 
C---	GUESSES BY TRIAL AND ERROR.  THE CRITERION FOR CLOSURE IS 
C---	THE GREAT CIRCLE SLF SRF MUST BE:  
C---		1)	TANGENT 
C---	OR 	2)	NOT INTERSECTING THE CIRCLE BUT WITHIN 
C---			9.5 * 10**-12 RADIANS.
C---			(5.4 * 10**-10 DEGREES OR .06MM ON THE EARTH'S SURFACE.)
C	[THIS MIGHT BE A BIT TOO PRECISE, BUT I FIGURED WHAT THE HECK.]
C
C---	THE START GUESS IS DETERMINED BY CONSIDERING THE SWATH LINES 1 AND 2
C---	EXTENDED TO THE LEFT UNTIL THEY INTERSECT AT POINT SL.  
      CALL UCROSS(P2,SL2,SR2)
      CALL UCROSS(SL,P1,P2)
C---	IT MIGHT BE HELPFUL TO THINK OF SL AS THE NORTH POLE AND THE SWATH 
C---	LINE 1 AS ON THE 0 MERIDIAN SOMEWHERE (BUT NOT NECESSARILY 
C---	CROSSING THE EQUATOR).  THE SWATH LINE THEN CAN BE APPROXIMATED AT ANY
C---	POINT IN BETWEEN 1 AND 2 AS THE MERIDIAN SEGMENT BETWEEN THE LEFT
C---	AND RIGHT BOUNDARIES WHILE THE MERIDIAN IS ROTATED AT A CONSTANT RATE
C---	ABOUT THE SL AXIS IN THE POSITIVE LONGITUDE DIRECTION 
C---	FROM LINE 1 TO LINE 2.  NOTE THAT AT 
C---	TIME 1 AND TIME 2, THIS IS EXACT.  IN BETWEEN, THE RATE OF 
C---	MOVEMENT ON THE LEFT AND RIGHT SEGMENTS WILL NOT BE EXACTLY CONSTANT.  
C---	ACTUALLY, THE LEFT AND RIGHT SWATH POINTS ARE MOVING 
C---	AT CONSTANT SPEEDS FROM THEIR 1 TO 2 LOCATIONS.  
C
C---	WE CAN ROTATE THE PLANE FROM LINE 1 FORWARD UNTIL IT REACHES C, THE
C---	CENTER OF THE CIRCLE.  WE WILL NOTE THE ANGLE ROTATED AS ANG1C.  
C---	ANGLE IS IN RADIANS.  
      CALL SANGL(ANG1C,SR1,SL,C)
C---	THEN WE CAN COMPUTE THE ANGLE ROTATED FROM C TO A TANGENT ON CIRCLE C.  
C---	THIS WILL BE CALLED ANGCT AND IS SOLVED USING THE RIGHT SPHERICAL 
C---	TRIANGLE SL, C, T.  (ALTHOUGH WE NEVER COMPUTE T, THE TANGENT POINT.)
      CALL GCDIST(DSLC,SL,C)
      ANGCT = ASIN( SIN(R)/SIN(DSLC) )
C---	THEN WE VISUALIZE THE PLANE ROTATING FROM LINE 1 TO T AND CALL THE 
      ANG1T = ANG1C - ANGCT
C---	ANGLE ANG1T ( = ANG1C - ANGCT).  WE WILL THEN COMPUTE THE ANGLE 
C---	ROTATED BY THE PLANE FROM LINE 1 TO LINE 2 CALLED ANG12.  
C---	ANGLE IS IN RADIANS.  
      CALL SANGL(ANG12,SR1,SL,SR2)
C---	IF ANG1T >= ANG12, THEN WE KNOW THERE IS NO COVERAGE.  
C---	WE NEED COVERAGE EQUIVALENT OF AT LEAST 6.4 MILLIMETERS.
      IF(ANG1T + 1.0D-9 .GE. ANG12) GO TO 9999
C---	IF ANG1T < ANG12, THEN WE KNOW THERE IS COVERAGE.  
C---	THIS DECISION WILL BE EXACT.  
C---	NOW OUR FIRST GUESS IS F = ANG1T / ANG12.  
      F = ANG1T / ANG12
 9000 CONTINUE
C---	F HAS BEEN COMPUTED, WHICH IN THE ABOVE CASES, DUE TO POSSIBLY SCREWY
C---	NON RECTANGULAR OR VERY LONG OR WIDE SWATH BOXES, IS ONLY AN 
C---	APPROXIMATION.  SO WE WILL TEST THE RESULTS AND MAKE A FIX.  
      ICOUNT = 0
 9100 CONTINUE
C---	USING F, WE CAN COMPUTE SLF AND SRF, THEN SEE HOW FAR C IS AWAY FROM
C---	THE SLF SRF GREAT CIRCLE SEGMENT.  WE COMPARE THAT TO R TO SEE HOW 
C---	CLOSE WE ARE TO WHAT WE WANT.  
      CALL GCTRVF(SLF,SL1,SL2,F)
      CALL GCTRVF(SRF,SR1,SR2,F)
C---	DSFC WILL BE THE DISTANCE FROM THE CLOSEST POINT ON THE F SWATH TO C.
C---	(X WILL BE THE CLOSEST POINT ON THE F SWATH TO C)
      CALL GCSEGP(DSFC,X,SLF,SRF,C)
      DIF = DSFC - R
      IF(DIF .LE. 9.5D-12 .AND. DIF .GE. 0.0D00 ) GO TO 9999
      IF(DIF.LE.9.5D-12.AND.DIF.GE.0.D0.AND.F.GE.0.D0) GO TO 9999
      IF(ICOUNT .NE. 0) GO TO 9200
C---	FIRST TIME THROUGH.  
C---	SET UP PARAMETERS TO GET CONVERSION BY SUCCESSIVE GUESS AND TESTS.
C---	WE WANT A DISTANCE D WHICH REPRESENTS THE DISTANCE TRAVELLED BY 
C---	THE POINT IN THE SWATH WHICH FIRST WILL REACH THE CIRCLE.  THIS 
C---	DISTANCE, WHEN COMPARED DIF, WILL PRODUCE THE ADJUSTMENT TO F.  
      CALL GCDIST(DXL,SLF,X)
      CALL GCDIST(DXR,SRF,X)
      WR = DXL / (DXL + DXR)
      WL = 1.00D00 - WR
      CALL GCDIST(DL12,SL1,SL2)
      CALL GCDIST(DR12,SR1,SR2)
C---	D IS A WEIGHTED AVERAGE OF THE LENGTHS OF THE RIGHT AND LEFT SIDES
C---	OF THE SWATH.  WE WILL USE IT TO TAKE INTO ACCOUNT THE DIFFERENT SPEEDS
C---	OF THE ENDPOINTS OF THE SWATH WHEN TRYING TO MOVE THE SWATH TO MAKE UP
C---	FOR THE DIFFERENCE BETWEEN THE DESIRED RESULT AND THE CURRENT RESULT.
      D = WL * DL12  +  WR * DR12
 9200 CONTINUE
C---	NOT QUITE SATISFACTORY YET.
      ICOUNT = ICOUNT + 1
C---	CHANGE F TO GET A BETTER RESULT.  
C---	MUST MOVE FROM SLF A DISTANCE DIF FORWARD.  TRANSLATE THIS TO GET F
C---	USING THE LONGER SIDE FOR A SMALLER F FOR BETTER CONVERGENCE.  
      F = F + (DIF / D) 
      IF (ICOUNT .LE. 30) GO TO 9100
C---	ENOUGH WORK.  GO WITH WHAT WE HAVE.  
 9999 CONTINUE
C---	MAKE SURE F IS AT LEAST 0.
      IF (F .LT. 1.0D-09 .AND. F .GT. -1.0) F = 0.0D00
      RETURN
      END
