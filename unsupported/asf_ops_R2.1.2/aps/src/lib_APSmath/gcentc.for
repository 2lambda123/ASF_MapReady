C--  Copyright (c)1996, California Institute of Technology.
C--  U.S. Government Sponsorship acknowledged.

*************************************************************************
*  Name:	GCENTC
*  Module Type: SUBROUTINE	Language: FORTRAN
*  $Logfile:   ACS003:[BLD.MPS.LIB.SRC]GCENTC.FOV  $
*  Purpose:	FROM A SEGMENT P1 P2, DETERMINE THE ENTRY POINT TO A CIRCLE.
*  Subroutines called:
*  GCLOSE
*  VECTOR LIBRARY: UCROSS
*  Input Parameters:
*  3 POINTS ON A UNIT SPHERE, (X,Y,Z)
*  Name         Type    Definition
*  P1(3)	REAL*8	FIRST POINT 
*  P2(3)	REAL*8	SECOND POINT OF SEGMENT
*  C(3)		REAL*8	CENTER OF THE CIRCLE
*  R		REAL*8	RADIUS OF THE CIRCLE
*			A POINT IS CONSIDERED INSIDE THE CIRCLE IF IT IS A
*			DISTANCE .LT. R.  
*  Output Parameters:
*  Name         Type    Definition
*  IFLAG	INTEGER	CONDITION FLAG:
*			= 0	NO ENTRY BY THE SEGMENT
*			= 1	POINT P1 IS ALREADY IN THE CIRCLE.
*				XIN IS RETURNED AS P1.
*			= 2	P1 IS OUTSIDE OF THE CIRCLE AND THE SEGMENT
*				ENTERS AT POINT XIN
*  XIN(3)	REAL*8	
*			IFLAG = 0	(2,2,2) (A BAD VALUE)
*			IFLAG = 1	P1
*			IFLAG = 2	THE ENTRY POINT TO THE CIRCLE
*  Variables:
*  Locals :
*  Externals :
*  Modification History:                                            
*  Date			Revision	Author
*  $Date$ $Revision$ $Author$
*                                                                   
*********************************************************************/
      SUBROUTINE GCENTC (IFLAG,XIN,P1,P2,C,R)
      character*100 SccsFileID
     -/'@(#)gcentc.for	5.1 98/01/08 APS/ASF\0'/

      IMPLICIT NONE
      REAL*8 XIN(3), P1(3), P2(3), C(3), R
      REAL*8 X(3), PI8, D1, DCX, DXI
      INTEGER IFLAG
C---	WE CAN GET PI FROM THIS FILE:  
      INCLUDE 'APS_HOME:include/local/mps_const_math.inc'
C---	SPECIAL CASE:  R <0.  (WE LET R=0 PASS.)
      IF(R.LT.0.0) CALL GCBOMB
C---	SPECIAL CASE:  R >= PI/2  WE DON'T ALLOW THE CIRCLE TO COVER HALF
C---	THE UNIT SPHERE.
      PI8 = PI
      IF(R.GE.PI8/2.0D00) CALL GCBOMB
C---	X WILL BE THE CLOSEST APPROACH TO C, ABS(DCX) WILL BE THE DISTANCE.
      CALL GCSEGP(DCX,X,P1,P2,C)
      IF(ABS(DCX) .GE. R - 1.0D-9) GO TO 9000
      DCX = ABS(DCX)
C---	SPECIAL CASE:  P1 IS INSIDE THE CIRCLE:  9001
      CALL GCDIST(D1,P1,C)
      IF (D1 .LE. R + 1.0D-9 ) GO TO 9001
C---	NOW P1 IS OUTSIDE THE CIRCLE.
C---	THERE MUST BE AN ENTRY TO THE CIRCLE.  P1 IS OUTSIDE, AND THE LINE 
C---	SEGMENT GETS WITHIN THE CIRCLE AT SOME TIME.  
C---	SPECIAL CASE:  P1 P2 IS A SEGMENT OF LENGTH ZERO.
      CALL GCLOSE(IFLAG,P1,P2)
C---	IF P1=P2, THEN THERE IS NO ENTRY TO THE CIRCLE:  9000
      IF(IFLAG.EQ.1) GO TO 9000
C---	CHECK FOR P1=-P2, INDETERMINATE DEFINITION OF SEGMENT.
      IF(IFLAG.EQ.-1) CALL GCBOMB
C---	THERE STILL MAY BE AN ENTRY POINT TO THE CIRCLE TO BE CALCULATED. 
C---	CONSIDER POINT X, WHICH IS THE CLOSEST APPROACH BY P1 P2 TO C, AND WE 
C---	THINK OF P1 P2 AS THE ENTIRE GT CIRCLE, NOT JUST A SEGMENT.  
      CALL GCPERP(X,P1,P2,C)
C---	WE START WITH C AND X, AND CAN FIND 2 POINTS ON THE CIRCLE WHICH
C---	INTERSECT THE P1 P2 GREAT CIRCLE.  REMEMBER THAT P1 IS OUTSIDE THE 
C---	CIRCLE AND WHEN TRAVELING TOWARD P2 WE ARE GOING TO GO INSIDE THE 
C---	CIRCLE.  WE NEED TO FIND THE DISTANCE FROM X TO THE EDGE OF THE CIRCLE 
C---	WHEN GOING TOWARDS P1.  
C---	WE CAN THINK OF A RIGHT SPHERICAL TRIANGLE WITH RIGHT ANGLE AT X, ONE 
C---	LEG GOING TO C, AND THE OTHER LEG GOING TO THE INTERSECTION 
C---	OF THE CIRCLE WITH THE 	P1 P2 SEGMENT.  THE HYPOTENUSE IS THE RADIUS
C---	FROM C TO THE INTERSECTION.  
C---	SO WE CAN USE THE LAW OF COSINES TO GET THE DISTANCE FROM X TO 
C---	THE INTERSECTION POINT:  DXI
      CALL GCDIST(DCX,C,X)
      DXI = ACOS( COS(R) / COS(DCX)  )
C---	NOW LET US CONSTRUCT THE INTERSECTION POINT NEAREST TO P1:
C---	CONSTRUCT XIN BY MOVING FROM X TOWARDS P1 A DISTANCE DXI.  
      CALL GCTRAV(XIN,X,P1,DXI)
      CALL GCBTWN(IFLAG,P1,P2,XIN)
      IF (IFLAG.NE.1) GO TO 9000
      IFLAG = 2
      GO TO 9999
 9000 CONTINUE
C---	NO INTERSECTION
      IFLAG = 0
      XIN(1) = 2.
      XIN(2) = 2.
      XIN(3) = 2.
      GO TO 9999
 9001 CONTINUE
C---	WE ALREADY ARE IN THE CIRCLE
      IFLAG = 1
      XIN(1) = P1(1)
      XIN(2) = P1(2)
      XIN(3) = P1(3)
      GO TO 9999
 9999 CONTINUE
      RETURN
      END
