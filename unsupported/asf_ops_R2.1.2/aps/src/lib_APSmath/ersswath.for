C--  Copyright (c)1996, California Institute of Technology.
C--  U.S. Government Sponsorship acknowledged.

***********************************************************************
*  NAME: SWATH_COMPUTE
*
*  MODULE TYPE: SUBROUTINE          LANGUAGE: F77
*
*  $LOGFILE$
*
*  PURPOSE:  GIVEN ORBIT INFORMATION AND THE SAR LOOK ANGLE AND BEAM
*            WIDTH, COMPUTE THE NEAR, FAR, AND CENTER OF THE SWATH.  
*            THE ERS-1 SAR IS RIGHT-LOOKING WITH SWATH CENTER DETERMINED 
*            BY THE ANTENNA BORESIGHT WHICH IS CANTED FROM THE GEODETIC 
*            NADIR.  PRECISE DEFINITIONS ARE GIVEN IN REF 1, APP. 2 & 3.
*            THE NEAR AND FAR POINT OF THE SWATH IS DETERMINED BY THE
*            BEAM WIDTH.  ELLIPSOID EARTH ASSUMED.
*
*  PARAMETER TYPE CONVENTION :
*     1. IMPLICIT DOUBLE PRECISION(A-H,O-Z) IN EFFECT.
*     2. ALL INTEGER VARIABLES BEGIN WITH I,J,K,L,M,N
*
*  INPUT PARAMETERS:
*
*     NAME            DESCRIPTION
*     SAT	SATELLITE:  E1, J1, RS, OR SS.  
*     IMODE	Satellite orientation mode.  
*			0 = Yaw steering mode
*			1 = earth center orientation mode
*	COORDINATE SYSTEM IS AN INERTIAL SYSTEM CONSISTENT WITH 
*	POSITION SS, AND LONGITUDE (RADIANS) OF ASCENDING NODE, OM
*     SM     : MEAN SEMIMAJOR AXIS FOR THE CURRENT ORBIT.
*     XI     : MEAN INCLINATION (RADIANS)
*     OM     : LONGITUDE OF ASCENDING NODE (RADIANS)
*     AR     : ARGUMENT OF PERIAPSIS (RADIANS)
*     TR     : TRUE ANOMALY (RADIANS)
*
*     GMU    : PLANET GRAVITATION CONSTANT
*     REQ    : PLANET EQUATORIAL RADIUS
*     FLAT   : PLANET FLATTENING FACTOR ~298.257
*     SS     : SATELLITE POSITION (INERTIAL COORD, KM)
*     ORBDAY : NUMBER OF ORBITS PER ORBIT, 14+1/3 FOR ERS-1 REF ORBIT
*     ALFA3  : (1) SWATH NEAR POINT ANGLE FROM GEODETIC NADIR (REF 1, 2)
*              (2) SWATH FAR POINT ANGLE FROM GEODETIC NADIR
*              (3) SWATH CENTER ANGLE FROM GEODETIC NADIR
*     KRITE  : 1 OUTPUT VERIFICATION DATA
*              0 DO NOT OUTPUT VERIFICATION DATA
*
*  OUTPUT PARAMETERS
*
*     NAME            DESCRIPTION
*    
*     QNEAR  : SWATH NEAR POINT ON EARTH ELLIPSOID (GEOCENTRIC COORD, KM)
*     QFAR   : SWATH FAR POINT ON EARTH ELLIPSOID
*     QCENTER: SWATH CENTER ON EARTH ELLIPSOID
*
*  CALL SUBROUTINES & FUNCTION
*
*     DUP_NEW
*     LOCAL_FRAME
*     ERS_YSM_ANGL
*     GLAT
*     ROTATE_ZXY
*
*  REFERENCES:
*
*  1. ERS-1 SATELLITE TO GROUND SEGMENT INTERFACE SPECIFICATION,
*     DOC. NO. ER-IS-ESA-GS-0001, ISSUE NO. 2, 4/3/87
*  2. LO, MARTIN, SWATH GENERATION ALGORITHM FOR ELLIPSOIDAL PLANET,
*     JPL IOM XXXXX, 3/XX/89
*
*  $DATE$      $REVISION$      $AUTHOR$
*  3/22/89     ORIGINAL        MARTIN W. LO
*
***********************************************************************
      SUBROUTINE SWATH_COMPUTE(SAT,IMODE,SM,XI,OM,AR,TR,
     ?			SS,ORBDAY,ALFA3,
     +                     QNEAR,QFAR,QCENTER,KRITE)
      character*100 SccsFileID
     -/'@(#)ersswath.for	5.1 98/01/08 APS/ASF\0'/

C---      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      IMPLICIT NONE
      CHARACTER*(*) SAT
      INTEGER IMODE
      REAL*8 SM, XI, OM, AR, TR, ORBDAY
      CHARACTER*10 QLABEL(3)
      REAL*8 SS(3),PP(3,3),QQ(3,3),QQ2(3,3),ALFA3(3)
      REAL*8 QNEAR(3),QFAR(3),QCENTER(3)
      REAL*8 XERS(3),YERS(3),ZERS(3), CI(3)
      DATA QLABEL/'QNEAR','QFAR','QCENTER'/
      REAL*8 REQ, RC, ZTA,XKI,ETA
      REAL*8 QNLAT, QFLAT, QCLAT, GLAT
      INTEGER KRITE, N
      INCLUDE 'APS_HOME:include/local/mps_const_earth.inc/LIST'
      REQ = ERAD
C---	RC IS THE SEMIMINOR AXIS OF THE EARTH REF ELLIPSOID, I.E., THE EARTH
C---	RADIUS AT THE NORTH OR SOUTH POLE.  
         RC=REQ-REQ/FLAT
         CI(1)=1.D0/(REQ*REQ)
         CI(2)=CI(1)
         CI(3)=1.D0/(RC*RC)
C---	GET THE UNIT VECTORS FOR REF FRAME A 2.1
      CALL LOCAL_FRAME(SS,XI,OM,XERS,YERS,ZERS)

      IF (IMODE .EQ. 0) THEN
C---	YAW STEERING IS DONE HERE 
C---	GET THE ANGLES TO PUT INTO THE STEERING LAWS TO ROTATE TO REF. A 2.2
      	CALL ERS_YSM_ANGL(REQ,FLAT,SM,XI,AR,TR,ORBDAY,ZTA,XKI,ETA,KRITE)
      ELSE
C---	NO YAW STEERING ON THIS SATELLITE:
	ZTA = 0.0d0
	XKI = 0.0d0
	ETA = 0.0d0
      ENDIF
C
      DO 100 N=1,3
         PP(1,N)= DSIN(ALFA3(N))
         PP(2,N)= 0.D0
         PP(3,N)=-DCOS(ALFA3(N))
C---	      THIS ROUTINE ROTATES THE SPACECRAFT AND EXTENDS THE RAY PP
C---	      FROM THE NEW SPACECRAFT FRAME UNTIL IT INTERSECTS THE EARTH AT 
C---	      QQ.  
         CALL ROTATE_ZXY(ZTA,XKI,ETA,CI,SS,PP(1,N),XERS,YERS,ZERS,
     +                   QQ(1,N),QQ2(1,N),KRITE,QLABEL(N))
C
  100 CONTINUE
      CALL DUP_NEW(QQ(1,1),QNEAR)
      CALL DUP_NEW(QQ(1,2),QFAR)
      CALL DUP_NEW(QQ(1,3),QCENTER)
C
C  CHECK
C
      IF(KRITE.GT.0) THEN
         PRINT*,'***** SUB ERS_SWATH CHECK               *****'
         PRINT*,'***** QNEAR,QFAR,QCENTER GEODETIC COORD *****'
         QNLAT=GLAT(QNEAR,KRITE)
         QFLAT=GLAT(QFAR,KRITE)
         QCLAT=GLAT(QCENTER,KRITE)
      ENDIF
      RETURN
      END
C
      SUBROUTINE ERS_YSM_ROT(REQ,FLAT,SM,XI,AR,TR,ORBDAY,PP,RPP,KRITE)
***********************************************************************
*  NAME: ERS_YSM_ROT
*
*  MODULE TYPE: SUBROUTINE          LANGUAGE: F77
*
*  $LOGFILE$
*
*  PURPOSE:  CONVRT PP IN ERS-1 LOCAL RELATIVE ORBITAL REFERENCE FRAME (A2.2)
*            TO ERS-1 LOCAL ORBITAL REFERENCE FRAME (A2.1).
*            FRAME A2.1 IS A GEOCENTRIC S/C COORD FRAME.
*            FRAME A2.2 IS A GEODETIC S/C COORD FRAME FOLLOWING ERS-1
*            YAW STEERING MODE LAWS.
*
*  PARAMETER TYPE CONVENTION :
*     1. IMPLICIT DOUBLE PRECISION(A-H,O-Z) IN EFFECT.
*     2. ALL INTEGER VARIABLES BEGIN WITH I,J,K,L,M,N
*
*  INPUT PARAMETERS:
*
*     NAME            DESCRIPTION
*
*     FLAT  :  EARTH FLATTENING FACTOR
*     REQ   :  EARTH EQUATORIAL RADIUS (KM)
*     SM    :  MEAN ORBIT SEMIMAJOR AXIS (KM)
*     XI    :  MEAN ORBIT INCLINATION (RAD)
*     AR    :  MEAN ORBIT ARGUMENT OF PERIGEE (RAD)
*     TR    :  MEAN ORBIT TRUE ANOMALY
*     KRITE :  1 (GT.0) OUTPUT TO SCREEN FOR CHECKING
*              0 (LE.0) NO OUTPUT TO SCREEN
*     PP    :  VECTOR IN A2.2 COORDINATES, TO BE TRANSFORMED
*
*  OUTPUT PARAMETERS
*
*     NAME            DESCRIPTION
*
*     RPP   :  PP IN A2.1 COORDINATES
*
*  REFERENCES:
*
*  1. ERS-1 SATELLITE TO GROUND SEGMENT INTERFACE SPECIFICATION,
*     DOC. NO. ER-IS-ESA-GS-0001, ISSUE NO. 2, 4/3/87
*
*  $DATE$      $REVISION$      $AUTHOR$
*  3/22/89     ORIGINAL        MARTIN W. LO
***********************************************************************
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION PP(3),RPP(3),DUM(3),DUM2(3),PPOD(3),RPPOD(3)
C
C  I.  COMPUTE CONSTANTS
C
      FE =1.D0/FLAT
      EE =DSQRT(FE*(2.D0-FE))
      CC =EE*EE*REQ/SM
      SXI=DSIN(XI)
      CXI=DCOS(XI)
C
C  THE CONSTANTS ABOVE THIS LINE SHOULD BE PRECALCULATED AND
C  PASSED TO THE SUBROUITNE OR IN DATA STATMENT TO SAVE CALCULATION TIME.
C  THE YMS STEERING LAWS ASSUMES MEAN ORBITAL ELEMENTS
C
      UU =AR+TR
      SUU=DSIN(UU)
      CUU=DCOS(UU)
C
C  II.  COMPUTE ROTATION ANGLES
C
      TZTA= SXI*CUU/(ORBDAY-CXI)
      ZTA = DATAN(TZTA)
      XKI =-CC*SXI*SXI*SUU*CUU
      ETA =-CC*SXI*CXI*SUU
C
C  III.  ROTATE PP TO RPP
C
      CALL ROTATZ(ZTA,PP ,DUM )
      CALL ROTATX(XKI,DUM,DUM2)
      CALL ROTATY(ETA,DUM2,RPP)
C
C  IV.  CHECK
C
      IF(KRITE.GT.0) THEN
         ZTAD=DEG(ZTA)
         XKID=DEG(XKI)
         ETAD=DEG(ETA)
         UUD =DEG(UU)
         TRUD=DEG(TR)
         CALL RECPOD(PP,PPOD)
         CALL RECPOD(RPP,RPPOD)
         WRITE(*,4000) ZTAD,XKID,ETAD,UUD,TRUD,PP,PPOD,RPP,RPPOD
 4000    FORMAT(' ***** SUB ERS_YSM_ROT CHECK *****'/
     +          ' ANGLES: ',3F12.4,' ZTA,XKI,ETA (DEG)'/
     +          ' UU,TRU: ',2F12.4/
     +          ' PP    : ',3F12.4/
     +          '         ',3F12.4,' (POLAR)'/
     +          ' RPP   : ',3F12.4/
     +          '         ',3F12.4,' (POLAR)'/
     +          ' *********************************'/)
      ENDIF
      RETURN
      END
C
      SUBROUTINE ERS_YSM_ANGL(REQ,FLAT,SM,XI,AR,TR,ORBDAY,
     +                        ZTA,XKI,ETA,KRITE)
***********************************************************************
*  NAME: ERS_YSM_ANGL
*
*  MODULE TYPE: SUBROUTINE          LANGUAGE: F77
*
*  $LOGFILE$
*
*  PURPOSE:  COMPUTE ERS-1 YAW STEERING MODE ANGLES.
*
*  PARAMETER TYPE CONVENTION :
*     1. IMPLICIT DOUBLE PRECISION(A-H,O-Z) IN EFFECT.
*     2. ALL INTEGER VARIABLES BEGIN WITH I,J,K,L,M,N
*
*  INPUT PARAMETERS:
*
*     NAME            DESCRIPTION
*
*     FLAT  :  EARTH FLATTENING FACTOR
*     REQ   :  EARTH EQUATORIAL RADIUS (KM)
*     SM    :  MEAN ORBIT SEMIMAJOR AXIS (KM)
*     XI    :  MEAN ORBIT INCLINATION (RAD)
*     AR    :  MEAN ORBIT ARGUMENT OF PERIGEE (RAD)
*     TR    :  MEAN ORBIT TRUE ANOMALY
*     ORBDAY:  NUMBER OF ORBITS PER DAY
*     KRITE :  1 (GT.0) OUTPUT TO SCREEN FOR CHECKING
*              0 (LE.0) NO OUTPUT TO SCREEN
*
*  OUTPUT
*
*     ZTA   :  YSM DELTA YAW ANGLE (RAD)
*     XKI   :  YSM DELTA PITCH ANGLE
*     ETA   :  YSM DELTA ROLL ANGLE
*
*  REFERENCES:
*
*  1. ERS-1 SATELLITE TO GROUND SEGMENT INTERFACE SPECIFICATION,
*     DOC. NO. ER-IS-ESA-GS-0001, ISSUE NO. 2, 4/3/87
*
*  $DATE$      $REVISION$      $AUTHOR$
*  3/22/89     ORIGINAL        MARTIN W. LO
***********************************************************************
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
C
C  I.  COMPUTE CONSTANTS
C
      FE =1.D0/FLAT
      EE =DSQRT(FE*(2.D0-FE))
      CC =EE*EE*REQ/SM
      SXI=DSIN(XI)
      CXI=DCOS(XI)
C
C  THE CONSTANTS ABOVE THIS LINE SHOULD BE PRECALCULATED AND
C  PASSED TO THE SUBROUITNE OR IN DATA STATMENT TO SAVE CALCULATION TIME.
C  THE YMS STEERING LAWS ASSUMES MEAN ORBITAL ELEMENTS
C
      UU =AR+TR
      SUU=DSIN(UU)
      CUU=DCOS(UU)
C
C  II.  COMPUTE ROTATION ANGLES
C
      TZTA= SXI*CUU/(ORBDAY-CXI)
      ZTA = DATAN(TZTA)
      XKI =-CC*SXI*SXI*SUU*CUU
      ETA =-CC*SXI*CXI*SUU
C
C  III.  CHECK
C
      IF(KRITE.GT.0) THEN
         ZTAD=DEG(ZTA)
         XKID=DEG(XKI)
         ETAD=DEG(ETA)
         UUD =DEG(UU)
         TRUD=DEG(TR)
         WRITE(*,3000) ZTAD,XKID,ETAD,UUD,TRUD
 3000    FORMAT(' ***** SUB ERS_YSM_ANGL CHECK *****'/
     +          ' ANGLES: ',3F12.4,' ZTA,XKI,ETA (DEG)'/
     +          ' UU,TRU: ',2F12.4/
     +          ' **********************************'/)
      ENDIF
      RETURN
      END
C
      SUBROUTINE ROTATE_ZXY(ZTA,XKI,ETA,CI,SS,PP,XERS,YERS,ZERS,
     +                      QQ,QQ2,KRITE,QLABEL)
***********************************************************************
*  NAME: ROTATE_ZXY
*
*  MODULE TYPE: SUBROUTINE          LANGUAGE: F77
*
*  $LOGFILE$
*
*  PURPOSE:  CONVRT PP IN ERS-1 LOCAL RELATIVE ORBITAL REFERENCE FRAME (A2.2)
*            TO ERS-1 LOCAL ORBITAL REFERENCE FRAME (A2.1, SEE REF 1).
*            FRAME A2.1 IS A GEOCENTRIC S/C COORD FRAME.
*            FRAME A2.2 IS A GEODETIC S/C COORD FRAME FOLLOWING ERS-1
*            YAW STEERING MODE LAWS.
*
*  PARAMETER TYPE CONVENTION :
*     1. IMPLICIT DOUBLE PRECISION(A-H,O-Z) IN EFFECT.
*     2. ALL INTEGER VARIABLES BEGIN WITH I,J,K,L,M,N
*
*  INPUT PARAMETERS:
*
*     NAME            DESCRIPTION
*
*     ZTA   :  YSM DELTA YAW ANGLE (RAD) Z-AXIS
*     XKI   :  YSM DELTA PITCH ANGLE     X-AXIS
*     ETA   :  YSM DELTA ROLL ANGLE      Y-AXIS
*     CI    :  (1) 1/(A*A)  (A: ELLIPSOID SEMI-AXIS IN KM)
*              (2) 1/(B*B)  (B: ELLIPSOID SEMI-AXIS IN KM)
*              (3) 1/(C*C)  (C: ELLIPSOID SEMI-AXIS IN KM)
*              SET UP FOR TRIAXIAL ELLIPSOID.  IN OUR CASE, A=B=REQ IS
*              THE EQUATORIAL EARTH RADIUS, C=POLAR RADIUS.
*     SS    :  SATELLITE POSITION IN KM
*     PP    :  SATELLITE POINTING IN A2.2 FRAME
*     XERS  :  UNIT X-VECTOR OF A2.2 FRAME IN INERTIAL COORD
*     YERS  :  UNIT Y-VECTOR OF A2.2 FRAME IN INERTIAL COORD
*     ZERS  :  UNIT Z-VECTOR OF A2.2 FRAME IN INERTIAL COORD
*
*  OUTPUT PARAMETERS
*
*     NAME            DESCRIPTION
*
*     QQ    :  POINT ON GROUND SEEN FROM S/C IN THE DIRECTION OF PP.
*              THIS IS THE FIRST POINT OF INTERSECTION OF THE LINE THRU 
*              SS IN THE DIRECTION OF PP WITH THE ELLIPSOID.
*     QQ2   :  SECOND POINT OF INTERSECTION OF THE LINE THRU SS IN THE
*              DIRECTION OF PP WITH THE ELLIPSOID.  INCLUDED FOR CHECKING
*              AND COMPLETENESS.
*     KRITE :  1 PRINT VERIFICATION DATA
*              0 DO NOT PRINT VERIFICATION DATA
*     QLABEL:  CHAR*10, LABEL FOR Q IN VERIFICATION DATA OUTPUT.
*
*  REFERENCES:
*
*  1. ERS-1 SATELLITE TO GROUND SEGMENT INTERFACE SPECIFICATION,
*     DOC. NO. ER-IS-ESA-GS-0001, ISSUE NO. 2, 4/3/87
*
*  $DATE$      $REVISION$      $AUTHOR$
*  3/22/89     ORIGINAL        MARTIN W. LO
***********************************************************************
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      CHARACTER*10 QLABEL
      DIMENSION PP(3),RPP(3),DUM(3),DUM2(3),PPOD(3),RPPOD(3)
      DIMENSION CI(3),SS(3),TT(3),QQ(3),QQ2(3),QQPOD(3)
      DIMENSION XERS(3),YERS(3),ZERS(3),XLAMDA(2)
C
C  I. ROTATE PP TO RPP AND FIND QQ
C
      CALL ROTATZ(ZTA,PP ,DUM )
      CALL ROTATX(XKI,DUM,DUM2)
      CALL ROTATY(ETA,DUM2,RPP)
      CALL ADD3(RPP(1),XERS,RPP(2),YERS,RPP(3),ZERS,DUM)
      CALL UNIT(DUM,TT)
      CALL ELLP(SS,TT,CI,XLAMDA,QQ,QQ2)
C
C  II. CHECK
C
      IF(KRITE.GT.0) THEN
         CALL RECPOD(PP,PPOD)
         CALL RECPOD(RPP,RPPOD)
         WRITE(*,2000) QLABEL,PP,PPOD,RPP,RPPOD
 2000    FORMAT(' ***** SUB ROTATE_ZXY CHECK *****'/
     +          1X,A10/
     +          ' PP    : ',3F12.4/
     +          '         ',3F12.4,' (POLAR)'/
     +          ' RPP   : ',3F12.4/
     +          '         ',3F12.4,' (POLAR)')
         CALL RECPOD(QQ,QQPOD)
         WRITE(*,2100) SS,TT,CI,XLAMDA,QQ,QQPOD,QQ2
 2100    FORMAT(' SS    : ',3F16.6/
     +          ' TT    : ',3F16.6/
     +          ' CI    : ',6X,3F16.12/
     +          ' XLAMDA: ',2F16.6/
     +          ' QQ    : ',3F16.6/
     +          ' QQPOD : ',3F16.6/
     +          ' QQ2   : ',3F16.6/
     +          ' ********************************'/)
      ENDIF
      RETURN
      END
C
      SUBROUTINE ROTATX(ANGLE,RR,RROT)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION RR(3),RROT(3)
C
C     ROTATE RR ABOUT X-AXIS BY ANGLE IN RADIANS, RESULT IN RROT
C
      CA=DCOS(ANGLE)
      SA=DSIN(ANGLE)
      RROT(1)=RR(1)
      RROT(2)=CA*RR(2)-SA*RR(3)
      RROT(3)=SA*RR(2)+CA*RR(3)
      RETURN
      END
C
      SUBROUTINE ROTATY(ANGLE,RR,RROT)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION RR(3),RROT(3)
C
C     ROTATE RR ABOUT Y-AXIS BY ANGLE IN RADIANS, RESULT IN RROT
C
      CA=DCOS(ANGLE)
      SA=DSIN(ANGLE)
      RROT(1)= CA*RR(1)+SA*RR(3)
      RROT(2)= RR(2)
      RROT(3)=-SA*RR(1)+CA*RR(3)
      RETURN
      END
C
      SUBROUTINE ROTATZ(ANGLE,RR,RROT)
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION RR(3),RROT(3)
C
C     ROTATE RR ABOUT Z-AXIS BY ANGLE IN RADIANS, RESULT IN RROT
C
      CA=DCOS(ANGLE)
      SA=DSIN(ANGLE)
      RROT(1)=CA*RR(1)-SA*RR(2)
      RROT(2)=SA*RR(1)+CA*RR(2)
      RROT(3)=RR(3)
      RETURN
      END
C
      SUBROUTINE LOCAL_FRAME(SS,XI,OM,XERS,YERS,ZERS)
***********************************************************************
*  NAME: LOCAL_FRAME
*
*  MODULE TYPE: SUBROUTINE          LANGUAGE: F77
*
*  $LOGFILE$
*
*  PURPOSE:  COMPUTE THE UNIT X,Y,Z VECTORS OF ERS-1 FRAME A2.1 IN THE
*            EARTH GEOCENTRIC INERTIAL COORDS (SEE REF 1).
*
*  PARAMETER TYPE CONVENTION :
*     1. IMPLICIT DOUBLE PRECISION(A-H,O-Z) IN EFFECT.
*     2. ALL INTEGER VARIABLES BEGIN WITH I,J,K,L,M,N
*
*  INPUT PARAMETERS:
*
*     NAME            DESCRIPTION
*
*     SS     : S/C POSITION (KM)
*     XI     : ORBIT INCLINATION (RAD)
*     OM     : ORBIT INERTIAL ASCENDING NODE (RAD)
*
*  OUTPUT PARAMETERS
*
*     NAME            DESCRIPTION
*
*     XERS  :  UNIT X-VECTOR OF A2.2 FRAME IN INERTIAL COORD
*     YERS  :  UNIT Y-VECTOR OF A2.2 FRAME IN INERTIAL COORD
*     ZERS  :  UNIT Z-VECTOR OF A2.2 FRAME IN INERTIAL COORD
*
*  REFERENCES:
*
*  1. ERS-1 SATELLITE TO GROUND SEGMENT INTERFACE SPECIFICATION,
*     DOC. NO. ER-IS-ESA-GS-0001, ISSUE NO. 2, 4/3/87
*
*  $DATE$      $REVISION$      $AUTHOR$
*  3/22/89     ORIGINAL        MARTIN W. LO
***********************************************************************
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION SS(3),XERS(3),YERS(3),ZERS(3),ON(3)
C
      CALL ORBNRM(XI,OM,ON)
C---	X IS THE NEGATIVE ORBIT NORMAL.
      CALL NEG(ON,XERS)
C---	Z IS THE GEOCENTRIC VERTICAL.  
      CALL UNIT(SS,ZERS)
C---	Y IS FORWARD IN THE PLANE OF THE MEAN ORBIT.  
      CALL CROSS(ZERS,XERS,YERS)
      RETURN
      END


      SUBROUTINE ELLP(SS,TT,CI,XLAMDA,QQ1,QQ2)
***********************************************************************
*  NAME: ELLP
*
*  MODULE TYPE: SUBROUTINE          LANGUAGE: F77
*
*  $LOGFILE$
*
*  PURPOSE:  COMPUTE INTERSECTION OF LINE WITH ELLIPSOID
*            LINE L GIVEN BY P=SS+XLAMDA*TT.
*            LINE GOES THRU SS, IN THE DIRECTION OF TT.
*            ELLIPSOID HAS PRINCIPAL AXES RA, RB, RC IN THE X,Y,Z DIRECTIONS.
*            QQ1, QQ2 ARE THE POINTS OF INTERSECTION.  SEE REF 1.
*
*  PARAMETER TYPE CONVENTION :
*     1. IMPLICIT DOUBLE PRECISION(A-H,O-Z) IN EFFECT.
*     2. ALL INTEGER VARIABLES BEGIN WITH I,J,K,L,M,N
*
*  INPUT PARAMETERS:
*
*     NAME            DESCRIPTION
*
*     SS     :  SATELLITE POSITOIN (KM)
*     TT     :  UNIT DIRECTION VECTOR OF THE LINE THRU SS
*     CI(1)  :  1.D0/(RA*RA) RA, RB, RC ARE ELLIPSOID SEMI-AXES IN KM.
*     CI(2)  :  1.D0/(RB*RB)
*     CI(3)  :  1.D0/(RC*RC)
*
*  OUTPUT PARAMETERS
*
*     NAME            DESCRIPTION
*
*     XLAMDA :  LINE PARAMETERS WHICH DETERMINES QQ1, QQ2 RESPECTIVELY.
*     QQ1    :  FIRST INTERSECTION POINT (KM, INERTIAL GEOCENTRIC COORD)
*     QQ2    :  SECOND INTERSECTION POINT 
*
*  REFERENCES:
*
*  1. LO, MARTIN, SWATH GENERATION ALGORITHM FOR ELLIPSOIDAL PLANET,
*     JPL IOM XXXXX, 3/XX/89
*
*  $DATE$      $REVISION$      $AUTHOR$
*  3/22/89     ORIGINAL        MARTIN W. LO
**********************************************************************
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      DIMENSION SS(3),TT(3),CI(3),QQ1(3),QQ2(3),XLAMDA(2)
      AA=0.D0
      BB=0.D0
      CC=0.D0
      DO 100 I=1,3
      AA=AA+CI(I)*TT(I)*TT(I)
      BB=BB+CI(I)*TT(I)*SS(I)
      CC=CC+CI(I)*SS(I)*SS(I)
  100 CONTINUE
      CC=CC-1.D0
      DISC=(BB*BB-AA*CC)
      IF(DISC.LT.0) THEN
         WRITE(*,1000) DISC,AA,BB,CC
 1000    FORMAT(' ***** IN SUB ELLP, DISC < 0 *****'/
     +          ' DISC   : ', F12.4,'  (B*B-A*C)'/
     +          ' A,B,C  : ',3F12.4/
     +          ' *********************************'/)
         GOTO 999
      ENDIF
      DISC=DSQRT(DISC)
      XLAMDA(1)=(-BB-DISC)/AA
      XLAMDA(2)=(-BB+DISC)/AA
      CALL ADD(XLAMDA(1),TT,1.D0,SS,QQ1)
      CALL ADD(XLAMDA(2),TT,1.D0,SS,QQ2)
  999 CONTINUE
      RETURN
      END
C
C
      FUNCTION GLAT(XX,KRITE)
***********************************************************************
*  NAME: GLAT
*
*  MODULE TYPE: FUNCTION          LANGUAGE: F77
*
*  $LOGFILE$
*
*  PURPOSE:  FUNCTION TO COMPUTE GEODETIC LATITUDE OF POINT XX
*
*  PARAMETER TYPE CONVENTION :
*     1. IMPLICIT DOUBLE PRECISION(A-H,O-Z) IN EFFECT.
*     2. ALL INTEGER VARIABLES BEGIN WITH I,J,K,L,M,N
*
*  INPUT PARAMETERS:
*
*     NAME            DESCRIPTION
*
*     XX    :  POSITION IN CARTESIAN GEOCENTRIC COORD (KM)
*     KRITE :  1 PRINT VERIFICATION DATA
*              0 DON'T PRINT VERIFICATION DATA
*  
*  OUTPUT PARAMETERS
*
*     NAME            DESCRIPTION
*
*     GLAT  :  GEODETIC LATITUDE (RAD) OF XX
*
*  COMMON BLOCK:  FOR USERS USE.
*
*    /COM_GDLAT/
*    GLATD  : GEODETIC LATITUDE (DEG)
*    GLOND  : LONGITUDE (DEG)
*    CLATD  : GEOCENTRIC LATITUDE (DEG)
*    RR     : COPY OF XX
*    HITE   : GEODETIC HEIGHT
*    TRGF   : SIN(LON),COS(LON),SIN(GLAT),COS(GLAT),TAN(GLAT),TAN(CLAT)
*
*  $DATE$      $REVISION$      $AUTHOR$
*  3/22/89     ORIGINAL        MARTIN W. LO
***********************************************************************
      IMPLICIT DOUBLE PRECISION(A-H,O-Z)
      COMMON /COM_GDLAT/GLATD,GLOND,CLATD,RR(3),HITE,TRGF(6)
      DIMENSION XX(3)
      CALL DUP_NEW(XX,RR)
      re = 6378.144d0
      CALL TOGEOD(re,XX,HITE,TRGF)
      GLON=DATAN2(TRGF(1),TRGF(2))
      GLAT= DATAN(TRGF(5))
      CLAT= DATAN(TRGF(6))
      GLOND=DEG(GLON)
      CLATD=DEG(CLAT)
      GLATD=DEG(GLAT)
C
C  CHECK
C
      IF(KRITE.GT.0) THEN
         WRITE(*,2000) XX,CLATD,GLATD,GLOND
 2000    FORMAT(' ***** FUNCTION GLAT CHECK *****'/
     +          ' XX    : ',3F16.4/
     +          ' CLATD : ', F16.4,
     +          ' GLATD : ', F16.4,
     +          ' GLOND : ', F16.4,/
     +          ' *******************************'/)
      ENDIF
      RETURN
      END
