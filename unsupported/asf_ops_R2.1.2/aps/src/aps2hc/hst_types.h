/* Generated by IDL compiler version OSF DCE T1.1.0-03 */
#ifndef hst_types_v1_0_included
#define hst_types_v1_0_included

#ifndef __STDC__
#define volatile
#endif

#ifndef IDL_DOUBLE_USED
#define IDL_DOUBLE_USED
#endif
#ifndef IDLBASE_H
#include <dce/idlbase.h>
#endif

#ifdef __cplusplus
    extern "C" {
#endif

#ifndef nbase_v0_0_included
#include <dce/nbase.h>
#endif
#define MAX_SATELLITES (10)
#define MAX_WOSES (2)
#define CUSTOMERS (2)
#define RECORDINGS (2)
#define MAX_WOS_RECORDS (2000)
#define MAX_HCWOS_RECORDS (4000)
#define MAX_JIT_RECORDS (8000)
#define MAX_ROS_RECORDS MAX_WOS_RECORDS
#define MAX_HRS_TIME_SLOTS (2001)
#define MAX_DEVICES (25)
#define MAX_EPHEMERIS_RECORDS (200)
#define MAX_FREQUENCIES (6)
#define WOS_10_METER (0)
#define WOS_11_METER (1)
#define MAX_TIME (2147483647)
#define MIN_TIME (0)
#define RGS_10_METER "10_METER"
#define RGS_11_METER "11_METER"
#define FORWARD "FORWARD"
#define REVERSE "REVERSE"
#define JERS_1 "JERS-1"
#define ERS_1 "ERS-1"
#define ERS_2 "ERS-2"
#define ADEOS_1 "ADEOS-1"
#define RADARSAT_1 "RADARSAT-1"
#define QUICKLOOK "QUICKLOOK"
#define ASF "ASF"
#define NASDA "NASDA"
#define ESA "ESA"
#define CSA "CSA"
#define TAPE_CHANGE_911 (0)
#define TAPE_CHANGE_QUICKLOOK_911 (1)
#define TAPE_CHANGE (2)
#define TAPE_CHANGE_QUICKLOOK (3)
#define MAX_ODL_WOS_MSG (1000000)
typedef idl_char ODL_msg_wos_t[1000000];
#define MAX_ODL_DUB_MSG (10000)
typedef idl_char ODL_msg_dub_t[10000];
typedef idl_char wos_acceptance_t[11];
#define ACCEPT "ACCEPT"
#define REJECT "REJECT"
typedef enum {WAIT_WOS,
ACCEPT_WOS,
REJECT_WOS} accept_wos_t;
typedef struct downlink_p_msg_t {
idl_long_int place_holder;
} DOWNLINK_P_MSG_T;
typedef idl_char ingest_type_t[21];
typedef struct downlink_ingest_msg_t {
ingest_type_t ingest_type;
} DOWNLINK_INGEST_MSG_T;
typedef struct downlink_ingest_p_msg_t {
idl_long_int place_holder;
} DOWNLINK_INGEST_P_MSG_T;
typedef struct dub_sg_msg_t {
idl_long_int place_holder;
} DUB_SG_MSG_T;
typedef struct dub_sp_msg_t {
idl_long_int place_holder;
} DUB_SP_MSG_T;
typedef struct dub_p_msg_t {
idl_long_int place_holder;
} DUB_P_MSG_T;
typedef struct tracking_ingest_p_msg_t {
idl_long_int place_holder;
} TRACKING_INGEST_P_MSG_T;
typedef struct pm_msg_t {
idl_long_int place_holder;
} PM_MSG_T;
typedef struct pm_p_msg_t {
idl_long_int place_holder;
} PM_P_MSG_T;
typedef struct sniff_msg_t {
idl_long_int place_holder;
} SNIFF_MSG_T;
typedef struct sniff_p_msg_t {
idl_long_int place_holder;
} SNIFF_P_MSG_T;
typedef struct spool_p_msg_t {
idl_long_int place_holder;
} SPOOL_P_MSG_T;
typedef idl_char job_type_str_t[13];
typedef enum {DOWNLINK,
DUB,
PM,
SNIFF,
SPOOL,
TAPE_SWAP,
TAPE_RELEASE} job_type_t;
typedef idl_long_int job_count_t;
typedef enum {DCRSI,
HD_96,
SONYID1} recorder_model_t;
typedef struct hrs_time_slot_t {
idl_long_int s_time;
idl_long_int e_time;
} HRS_TIME_SLOT_T;
typedef idl_char process_id_t[256];
typedef idl_char process_addr_t[256];
typedef idl_char message_t[1024];
typedef idl_char device_label_t[9];
typedef idl_char doer_label_t[21];
typedef idl_char filename_t[256];
typedef idl_short_int dps2_terminal_t;
#define dps2_MATRIX_SIZE (16)
#define dps2_UNCONNECTED (-1)
typedef dps2_terminal_t dps2_MatrixState_t[16];
typedef idl_ulong_int tape_address_t;
typedef idl_char tape_annotation_t[256];
typedef idl_char tape_id_t[13];
typedef idl_usmall_int SonyID1_status_t[12];
typedef struct  {
idl_ushort_int ModStatus;
idl_ushort_int AuxStatus;
idl_ushort_int ErrorCode;
tape_address_t StartPosition;
tape_address_t EndPosition;
tape_address_t CurrentPosition;
} dcrsi_status_t;
typedef struct  {
idl_char mode;
idl_short_float speed;
idl_short_int ClockLock;
idl_short_int MasterLock;
idl_short_int LowTape;
idl_short_int Remote;
idl_short_int Config;
tape_address_t FootageCount;
} HD96_status_t;
typedef idl_char time_str_t[22];
typedef idl_char msg_type_t[80];
typedef idl_char subsystem_t[4];
typedef idl_char satellite_id_t[16];
typedef idl_ulong_int downlink_orbit_id_t;
typedef idl_ulong_int downlink_segment_id_t;
typedef idl_ulong_int frequency_t;
typedef struct downlink_info_t {
satellite_id_t satellite_id;
downlink_orbit_id_t dl_orbit_id;
downlink_segment_id_t dl_segment_id;
idl_long_int time_aos;
time_str_t year_aos_str;
time_str_t time_aos_str;
idl_long_int time_los;
time_str_t year_los_str;
time_str_t time_los_str;
frequency_t frequency;
} DOWNLINK_INFO_T;
typedef idl_char data_direction_t[8];
typedef struct record_info_t {
data_direction_t data_direction;
idl_long_int time_record_start;
time_str_t year_record_start_str;
time_str_t time_record_start_str;
idl_long_int time_record_stop;
time_str_t year_record_stop_str;
time_str_t time_record_stop_str;
} RECORD_INFO_T;
typedef idl_char customer_t[16];
typedef idl_char quicklook_t[4];
typedef struct customer_info_t {
customer_t customer1;
customer_t customer2;
quicklook_t quicklook;
} CUSTOMER_INFO_T;
typedef idl_ulong_int hc_activity_id_t;
typedef idl_char software_version_id_t[80];
typedef struct downlink_perform_info_t {
hc_activity_id_t hc_activity_id;
software_version_id_t software_version_id;
idl_long_int time_ingested;
idl_long_int time_xformed;
idl_long_int time_scheduled;
idl_long_int time_scheduled_start;
idl_long_int time_scheduled_stop;
idl_long_int time_worker_start;
idl_long_int time_worker_stop;
idl_long_int time_reported;
} DOWNLINK_PERFORM_INFO_T;
typedef struct dub_perform_info_t {
hc_activity_id_t hc_activity_id;
software_version_id_t software_version_id;
idl_long_int time_requested;
idl_long_int time_queued;
idl_long_int time_scheduled;
idl_long_int time_scheduled_start;
idl_long_int time_scheduled_stop;
idl_long_int time_worker_start;
idl_long_int time_worker_stop;
idl_long_int time_reported;
} DUB_PERFORM_INFO_T;
typedef struct perform_info_t {
hc_activity_id_t hc_activity_id;
software_version_id_t software_version_id;
idl_long_int time_ingested;
idl_long_int time_scheduled;
idl_long_int time_scheduled_start;
idl_long_int time_scheduled_stop;
idl_long_int time_worker_start;
idl_long_int time_worker_stop;
idl_long_int time_reported;
} PERFORM_INFO_T;
typedef idl_char antenna_id_t[16];
typedef idl_char fa_schedule_link_t[12];
typedef idl_char sensor_t[2];
typedef idl_char sensor_mode_t[4];
typedef idl_char site_name_t[8];
typedef struct wos_record_t {
antenna_id_t antenna_id;
DOWNLINK_INFO_T downlink_info;
RECORD_INFO_T record_info;
CUSTOMER_INFO_T customer_info;
DOWNLINK_PERFORM_INFO_T performance_info;
fa_schedule_link_t fa_schedule_link;
sensor_t sensor;
sensor_mode_t mode;
site_name_t site_name;
} WOS_RECORD_T;
typedef idl_char precision_t[17];
typedef idl_char coordinate_system_t[20];
typedef idl_long_float vector_component_t;
typedef struct ephemeris_record_t {
satellite_id_t satellite_id;
downlink_orbit_id_t dl_orbit_id;
idl_long_int datetime_time;
time_str_t ephemeris_year;
time_str_t ephemeris_time;
precision_t precision;
coordinate_system_t coordinate_system;
vector_component_t x_pos;
vector_component_t y_pos;
vector_component_t z_pos;
vector_component_t x_vel;
vector_component_t y_vel;
vector_component_t z_vel;
} EPHEMERIS_RECORD_T;
typedef idl_char media_type_t[16];
typedef idl_char station_id_t[3];
typedef idl_char tape_series_t[16];
typedef idl_long_int job_type_modifier_t;
typedef struct downlink_jit_record_t {
idl_long_int priority;
media_type_t media_type;
tape_series_t tape_series;
customer_t customer;
WOS_RECORD_T wos_record;
} DOWNLINK_JIT_RECORD_T;
typedef struct dub_jit_record_t {
idl_long_int temporary_place_holder;
} DUB_JIT_RECORD_T;
typedef struct pm_jit_record_t {
idl_long_int temporary_place_holder;
} PM_JIT_RECORD_T;
typedef struct sniff_jit_record_t {
idl_long_int temporary_place_holder;
} SNIFF_JIT_RECORD_T;
typedef struct spool_jit_record_t {
idl_long_int dogtag;
media_type_t media_type;
idl_boolean AlsoFormat;
} SPOOL_JIT_RECORD_T;
typedef struct tape_swap_t {
idl_long_int temporary_place_holder;
} TAPE_SWAP_T;
typedef struct tape_release_t {
idl_long_int time_release_start;
idl_long_int time_release_stop;
job_type_modifier_t job_type_modifier;
media_type_t media_type;
tape_series_t tape_series;
station_id_t station_id;
} TAPE_RELEASE_T;
typedef struct hrs_record_t {
idl_long_int job_start_time;
idl_long_int job_end_time;
job_count_t job_count;
struct job_info_t {
job_type_t job_type;
union  {
/* case(s): 0 */
DOWNLINK_JIT_RECORD_T downlink_jit;
/* case(s): 1 */
DUB_JIT_RECORD_T dub_jit;
/* case(s): 2 */
PM_JIT_RECORD_T pm_jit;
/* case(s): 3 */
SNIFF_JIT_RECORD_T sniff_jit;
/* case(s): 4 */
SPOOL_JIT_RECORD_T spool_jit;
/* case(s): 5 */
TAPE_SWAP_T tape_swap_jit;
/* case(s): 6 */
TAPE_RELEASE_T tape_release_jit;
} job;
} job_info;
} HRS_RECORD_T;
typedef struct ros_record_t {
process_id_t hardware_device;
HRS_RECORD_T hrs_record;
} ROS_RECORD_T;
typedef struct downlink_msg_t {
ROS_RECORD_T ros_record;
idl_long_int dogtag;
tape_id_t tape_id;
tape_id_t tape_alias;
idl_long_int actual_start_time;
idl_long_int actual_stop_time;
tape_address_t start_address;
tape_address_t stop_address;
tape_annotation_t annotation;
dps2_MatrixState_t analog_state;
dps2_MatrixState_t digital_state;
} DOWNLINK_MSG_T;
typedef idl_char rgs_file_type_t[21];
typedef struct tracking_ingest_msg_t {
antenna_id_t antenna;
satellite_id_t satellite;
downlink_orbit_id_t orbit;
downlink_segment_id_t segment;
filename_t filename;
rgs_file_type_t filetype;
} TRACKING_INGEST_MSG_T;
typedef enum {MOUNT,
DISMOUNT} mount_action_t;
typedef struct tape_available_msg_t {
idl_long_int dogtag;
tape_id_t tape_id;
tape_id_t tape_alias;
tape_series_t tape_series;
media_type_t media_type;
mount_action_t action;
} TAPE_AVAILABLE_MSG_T;
typedef struct spool_msg_t {
tape_id_t tape_id;
idl_long_int dogtag;
media_type_t media_type;
idl_long_int when;
} SPOOL_MSG_T;
typedef enum {DL_MSG_COUNTER,
DL_PERF_MSG_COUNTER,
DLI_MSG_COUNTER,
DLI_PERF_MSG_COUNTER,
DUB_MSG_COUNTER,
DUB_SPEC_MSG_COUNTER,
DUB_PERF_MSG_COUNTER,
TA_MSG_COUNTER,
TRI_MSG_COUNTER,
TRI_PERF_MSG_COUNTER,
PM_MSG_COUNTER,
PM_PERF_MSG_COUNTER,
SNIFF_MSG_COUNTER,
SNIFF_PERF_MSG_COUNTER,
SPOOL_MSG_COUNTER,
SPOOL_PERF_MSG_COUNTER,
HC_ACTIVITY_COUNTER,
__MAX_COUNTERS__} counter_t;
typedef idl_ulong_int count_t;
#define BrokerAnnotation "Master Broker"
#define BrokerTestAnnotation "Master Broker Test Client"
#define conductorAnnotation "Conductor"
#define conductorTestAnnotation "Conductor Test Client"
#define dcrsiAnnotation "DCRSi Device Driver"
#define dcrsiTestAnnotation "DCRSi Test Client"
#define deviceAnnotation "Generic Device Driver"
#define deviceTestAnnotation "Device Test Client"
#define DevManAnnotation "Device Manager"
#define DevManTestAnnotation "Device Manager Test Client"
#define dlESAnnotation "Downlink Event Scheduler"
#define dlESTestAnnotation "Downlink Event Scheduler Test Client"
#define dlDistributeAnnotation "Downlink Distribute"
#define dlDistributeTestAnnotation "Downlink Distribute Test Client"
#define dlIngestAnnotation "Downlink Ingest"
#define dlIngestTestAnnotation "Downlink Ingest Test Client"
#define wosAnnotation "WOS Ingest"
#define wosTestAnnotation "WOS Ingest Test Client"
#define ephemerisAnnotation "Ephemeris Ingest"
#define ephemerisTestAnnotation "Ephemeris Ingest Test Client"
#define dlJITAnnotation "Downlink JIT"
#define dlJITTestAnnotation "Downlink JIT Test Client"
#define aIngestAnnotation "Acquisition Ingest"
#define aIngestFetchAnnotation "Acquisition Ingest Fetch Client"
#define aIngestReprocessAnnotation "Acquisition Ingest Reprocess Client"
#define dlVerifyAnnotation "Downlink Verify"
#define dlVerifyAcceptAnnotation "Downlink Verify Accept Client"
#define dsDistributeAnnotation "Data Stripper Distribute"
#define dsDistributeTestAnnotation "Data Stripper Distribute Test Client"
#define aWorkerAnnotation "Downlink Tape Worker"
#define aWorkerTestAnnotation "Downlink Tape Worker Test Client"
#define dsWorkerAnnotation "Data Stripper Worker"
#define dsWorkerTestAnnotation "Data Stripper Worker Test Client"
#define workerTestAnnotation "Worker Test Client"
#define dps2Annotation "DPS-II Device Driver"
#define dps2TestAnnotation "DPS-II Test Client"
#define eventTestAnnotation "Event Test Client"
#define GPIBAnnotation "GPIB Super Driver"
#define GPIBTestAnnotation "GPIB Super Driver Test Client"
#define HD96Annotation "HD-96 Device Driver"
#define HD96TestAnnotation "HD-96 Test Client"
#define HRSAnnotation "Hardware Resource Schedule"
#define HRSTestAnnotation "Hardware Resource Schedule Test Client"
#define GopherAnnotation "GUI Gopher Relay Server"
#define guiAnnotation "GUI Gopher"
#define killerAnnotation "DCE Server Killer"
#define ruleKeeperAnnotation "Rule Keeper"
#define ruleKeeperTestAnnotation "Rule Keeper Test Client"
#define w2rAnnotation "WOS to ROS"
#define SonyID1Annotation "Sony ID1 Device Driver"
#define SonyID1TestAnnotation "Sony ID1 Test Client"
#define Ant10DistAnnotation "10m Distribute"
#define Ant10DistTestAnnotation "10m Distribute Test Client"
#define Ant11DistAnnotation "11m Distribute"
#define Ant11DistTestAnnotation "11m Distribute Test Client"
#define Ant10ReptAnnotation "10m Reporter"
#define Ant11ReptAnnotation "11m Reporter"
#define SustainingEngineeringTest1 "Sus Eng Test 1"
#define SustainingEngineeringTest2 "Sus Eng Test 2"
#define SustainingEngineeringTest3 "Sus Eng Test 3"
#define SustainingEngineeringTest4 "Sus Eng Test 4"
#define ReporterAnnotation "Reporter"
#define ReporterTestAnnotation "Reporter Test Client"
#define tapeManAnnotation "Tape Manager"
#define tapeManTestAnnotation "Tape Manager Test Client"
#define TCRAnnotation "Time Code Reader Device Driver"
#define TCRTestAnnotation "Time Code Reader Test Client"
#define barcodeAnnotation "Bar Code Reader Device Driver"
#define barcodeTestAnnotation "Bar Code Reader Test Client"
#define TRESAnnotation "Tape Release"
#define TRESTestAnnotation "Tape Release Test Client"
#define TCGAnnotation "Time Code Generator Device Driver"
#define TCGTestAnnotation "Time Code Generator Test Client"

#ifdef __cplusplus
    }
#endif

#endif
