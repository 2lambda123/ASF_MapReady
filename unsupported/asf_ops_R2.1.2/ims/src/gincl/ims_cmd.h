/******************************************************************************
**
** File:        ims_cmd.h
**
** Function:    Defines structures and constants used by functions that
**              use the command parsing utilities.
**
** Author:      J. Jacobson
**
** Date:        1/19/90
**
** Modified:    11/28/94 - S. Hardman - R0
**              ASF adaptation of code inherited from AMMOS-CDB.
**
******************************************************************************/

#ifndef _IMS_CMD_H
#define _IMS_CMD_H

static char *sccsCmd = "@(#)ims_cmd.h	5.1  03/17/96";

/*
** Definitions
*/
#define IMS_MAXKEYSIZE   256
#define IMS_MAXVALSIZE   256
#define IMS_MAXLINELEN   512
#define IMS_MAXCMDLEN   2048
#define IMS_MAXFILESPEC  128

/*
** Enumeration of command-file format types.
**
** Only one type so far, IMS_STANDARD, keyword = value
** Now, another type, IMS_PVL, to read parameters files that are
** parsed as a subset of PVL.  
*/
enum ims_cmdFileTypes {IMS_STANDARD, IMS_PVL};

/*
** Structure for isolating parts of a command.
*/
typedef struct cmdTokens
{
	char keyword[IMS_MAXKEYSIZE];
	char value [IMS_MAXVALSIZE];
} IMS_CMD_TOKENS;

/*
** Standard command data structure for use in library calls to store
** and retrieve configuration parameters in hash table.  This is used
** to create an itemlist, which is an array of these items, and is passed
** to the configuration routines along with an itemcount (which can be
** generated by the compiler).
*/
typedef struct	cmdClass	{
	char	*paramKeyword;
	char	**value;
} IMS_CMD_CLASS;

/*
** Macro for determining the number of IMS_CMD_CLASS elements in an
** array.  Makes it easy for the user to have the compiler determine
** the count of valid keywords.
*/
#define IMS_CMD_CLASS_COUNT(x) sizeof((x))/sizeof((x)[0])

/*
** Function Prototype for the ims_getCmd.c module.
*/
int ims_getFileParms (char *, IMS_CMD_CLASS [], int, IMS_MSG_STRUCT *);

/*
** Function Prototype for the ims_getCmdLn.c module.
*/
int ims_getCmdLine (int, char *[], IMS_CMD_CLASS [], int, IMS_MSG_STRUCT *);

#endif	/* !_IMS_CMD_H */
