#!/bin/sh
#
# NAME: register_cpx
#
# SYNOPSIS:
#
#        register_cpx <file1> <file2> <igram> [<grid res>[-sinc[-warp]]]
#
# DESCRIPTION:
#
#    Register_cpx will coregister the two images,
#    using resolve, fico, fit_plane, and remap.
#    The image files will be split up into amplitude and phase
#    components, called .amp and .phase, and co-registered.
#    The images are then interfered, creating an interferogram
#    <igram> and coherence image <igram>_coh.  This can be passed
#    on to tandem_ifm.
#
#    The register scripts automate the process of interferogram
#    generation for four data types:
#    CPX (register_cpx), windowed CPX (register_cpx_window),
#    SIC (register_slc), and windowed (or trimmed) SIC (register_slc_window).
#    CPX refers to IEEE 32-bit floating-point complex data (.cpx and .ddr)
#    SIC refers to ASF's Single Int Complex data (.D and .L, or .dat and .ldr).
#    After running this script you have an interferogram, which
#    you can view with ml, generate a DEM with tandem_ifm(1), or
#    use for your own science.
#    An estimate of the baseline is written to base.00.
#       
# EXTERNAL ASSOCIATES:
#    NAME:               USAGE:
#    ---------------------------------------------------------------
#    coh
#    igram 
#    remap
#    fit_plane
#    fico
#    resolve
#
# FILE REFERENCES:
#    NAME:               USAGE:
#    ---------------------------------------------------------------
#
# PROGRAM HISTORY:
#    VERS:   DATE:  AUTHOR:      PURPOSE:
#    ---------------------------------------------------------------
#    1.0	
#    1.2    1997   Orion Lawlor
#
# HARDWARE/SOFTWARE LIMITATIONS:
#
# ALGORITHM DESCRIPTION:
#
# ALGORITHM REFERENCES:
#
# BUGS
#	
#****************************************************************************
#								            *
#   Register_cpx will coregister the two images				    *
#   Copyright (C) 2001  ASF Advanced Product Development    	    	    *
#									    *
#   This program is free software; you can redistribute it and/or modify    *
#   it under the terms of the GNU General Public License as published by    *
#   the Free Software Foundation; either version 2 of the License, or       *
#   (at your option) any later version.					    *
#									    *
#   This program is distributed in the hope that it will be useful,	    *
#   but WITHOUT ANY WARRANTY; without even the implied warranty of    	    *
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the   	    *
#   GNU General Public License for more details.  (See the file LICENSE     *
#   included in the asf_tools/ directory).				    *
#									    *
#   You should have received a copy of the GNU General Public License       *
#   along with this program; if not, write to the Free Software		    *
#   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.               *
#									    *
#       ASF Advanced Product Development LAB Contacts:			    *
#	APD E-mail:	apd@asf.alaska.edu 				    *
# 									    *
#	Alaska SAR Facility			APD Web Site:	            *	
#	Geophysical Institute			www.asf.alaska.edu/apd	    *
#      	University of Alaska Fairbanks					    *
#	P.O. Box 757320							    *
#	Fairbanks, AK 99775-7320					    *
#								  	    *
#**************************************************************************/
#
if [ $# -lt 3 -o $# -gt 6 ]
then
	echo "Register_cpx:"
	echo "Usage: register_cpx <file 1> <file 2> <igram> "
	echo "          [ <grid resolution> [ -sinc [ -warp ]]]"
	echo ""
	echo "  <file 1> a complex file (.cpx, .ddr, and .L or .ldr)"
	echo "  <file 2> a complex file (.cpx, .ddr)"
	echo "  <igram> the output interferogram (.amp, .phase, .ddr)"
	echo "  [ <grid resolution> ] is the grid resolution for fico(1)."
	echo "                           (the default is 20, for a 20x20 grid)"
	echo "  [ -sinc ] use Sinc kernel to do the remapping-- this is "
	echo "            slower, but may result in higher quality."
	echo "            The default is bilinear interpolation."
	echo "  [ -warp ] create and use a non-linear warping image instead"
	echo "            of a linear planar map.  See fit_warp(1)."
	echo ""
	echo "Register_cpx will coregister the two images,"
	echo "using resolve, fico, fit_plane, and remap."
	echo "The image files will be split up into amplitude and phase"
	echo "components, called .amp and .phase, and co-registered."
	echo "The images are then interfered, creating an interferogram"
	echo "<igram> and coherence image <igram>_coh.  This can be passed"
	echo "on to tandem_ifm."
	echo "Version 1.2, ASF SAR TOOLS"
	exit 1
fi

sincOption=""
doWarp="no"
if [ "x$5" = "x-sinc" -o "x$6" = "x-sinc" ]
then
	echo "Will use sinc interpolation kernel..."
	sincOption="-sinc"
fi
if [ "x$5" = "x-warp" -o "x$6" = "x-warp" ]
then
	echo "Will do nonlinear image warping..."
	doWarp="yes"
fi


mkdir reg > /dev/null 2>&1
resolve $1 $2 base.00 reg/ctrl
fico $1 $2 reg/ctrl reg/fico $4
if [ $? -eq 101 ]
then
	echo "Error: Fico could not find many offsets with"
	echo "interferometric phase.  This means the interferogram"
	echo "is either mis-registered or just bad."
	echo "You may want to check if the images are over the same area."
	exit 2
fi

if [ "$doWarp" = "yes" ]
then
# Fancy "warping image" resampling
	fit_warp reg/fico $2 reg/warp_image
	remap -warp reg/warp_image -sameSize $sincOption $2.cpx $2_corr.cpx
	
else
# Ordinary 2x3 matrix resampling
	fit_plane reg/fico reg/matrixFile
	remap -matrix reg/matrixFile -sameSize $sincOption $2.cpx $2_corr.cpx
fi

igram $1 $2_corr $3
coh $1 $2_corr $3_coh

# /bin/rm $2_corr.*

echo XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
echo "register_cpx complete..."
