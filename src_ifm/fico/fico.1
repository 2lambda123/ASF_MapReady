
    NAME: fico

    SYNOPSIS: fico <file1> <file2> <control> <out> 
    		[<grid resolution>] [<-f>] [-log <file>] [-quiet]

    DESCRIPTION:
    	Fico is a program used to perform sub-pixel
    correlation during the process of interferometry.
    It only works with complex images.
    
    	The way fico works is it correlates (that is, 
    match up) two images at various points in the image.  The 
    points it matches up are arranged in a grid.  The number of
    points in this grid can be set by the command line.
    
    	Fico needs an gross estimate (to a single pixel) of the 
    offset between the two images; it gets this offset from its 
    control file.  For each grid point, Fico computes the phase
    coherence of several offsets near the gross offset, and 
    searches for the highest coherence offset.  It then refines
    this offset by performing a parabolic interpolation on the
    nearby coherence values.
    
    	Fico now double-checks its result by running the same
    calculation with the images reversed.  If the two results 
    agree, the point is "good" and is output.  If the results 
    disagree, the correlation is "bad" and is not output.
    
    	In addition to the offset, fico also calculates the SNR
    (Signal-to-Noise Ratio) at each point.  This can be used as
    a measure of the quality of the correlation.  Correlation
    points with a low SNR are bad.
    
    	If fico does not find many good points, you may not
    get an interferogram when you interfere the two images.
    This can be the result of several things: your interferometric
    baseline might be too big, and there will never be an
    interferogram between the images; the initial offset
    in the fico control file is incorrect, and fico cannot
    find anything that looks like interferometric phase.
    
    	Increasing the number of grid points
    slows the program down, but generates more output for
    fit_line or fit_plane, which then improves the coherence.

    	
    
    OPTIONS:
    	<file 1> the first image file (which will not be moved.)
    	
    	<file 2> the second image file (which will be moved.)
    	
    	<control> generated by resolve(1), this file has 
    		the format:
    		<offset x (integer)>
    		<offset y (integer)>
    		<correlation chip size (32)>
    		<fraction of a pixel (1)>
    		<maximum possible offset in X (4.1)>
    		<maximum possible offset in Y (6.1)>
    	
    	<out>   is a list of points, and the offset (relative to
    		resolve's initial offset) at each point.  The format is:
    		<img1 X> <img1 Y> <img2 X> <img2 Y> <snr>
    	
    if <grid resolution> is given, then fico will correlate
    		that number of grid points per axis.  The total number 
    		of points in the grid is this parameter squared, so
    		using large values will take a long time to complete.
    		(e.g. if a 20x20 grid (the default) takes 2 min,
    		  a 40x40 grid would take approx. 8 minutes.)
   
    if  < -f >  is given, then fico will use a complex FFT to attempt 
		to match the two images.  This seems to work better in 
		cases where the coherence is very low.  If the standard 
		coherence matching algorithm fails, try using the complex 
		FFT matching.

	-log <file>  Option to have the output written to a log file.

	-quiet   Option to have the output surpressed to the essential.

    ERROR MESSAGES:
    MESSAGE GIVEN:			REASON:
    -----------------------------------------------------------------

    EXAMPLES:
	If you had just run resolve to generate a control point file "ctrl1",
	and you had two float complex (.cpx and .ddr) image files named 
	"img1" and "img2", and you wanted to perform correlation 
	(at the default 10x10 grid resolution, running 100 points) to
	generate an offset point file "fico1", you would type:
	
		fico img1 img2 ctrl1 fico1
	
    SEE ALSO:
    	resolve(1), fit_line(1), fit_plane(1), register_sic(1)

    HARDWARE/SOFTWARE LIMITATIONS: none

    BUGS: none

    AUTHOR: Rob Fatland, Mike Shindle, Orion Lawlor & Mark Ayers; 
	    last modified June 2000
    
    CONTACT: apd@asf.alaska.edu
	     or visit http://www.asf.alaska.edu/apd



